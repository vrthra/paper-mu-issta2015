@inproceedings{gligoric2013comparing,
  title={Comparing Non-adequate Test Suites using Coverage Criteria},
  author={Gligoric, Milos and Groce, Alex and Zhang, Chaoqiang and Sharma, Rohan and Alipour, Mohammad Amin and Marinov, Darko},
  booktitle={ACM International Symposium on Software Testing and Analysis},
  year={2013},
  publisher={ACM}
}

@misc{randoop,
    author = {Carlos Pacheco and Michael D. Ernst},
    title = {Randoop Random Test Generation},
    howpublished = {\url{http://code.google.com/p/randoop}},
    urldate = {2013-07-06}
}

@misc{maven,
    author = {{Apache Software Foundation}},
    title = {Apache Maven Project},
    howpublished = {\url{http://maven.apache.org}},
    urldate = {2013-07-06}
}
@techreport{agrawal1989design,
  address = {West Lafayette, IN, },
  author = {Agrawal, Hiralal and DeMillo, Richard A. and Hathaway, Bob and Hsu, William and Hsu, Wynne and Krauser, E. W. and Martin, R. J. and Mathur, Aditya P. and Spafford, Eugene},
  institution = {Software Engineering Research Center, Purdue University},
  month = {March},
  number = {SERC-TR41-P},
  title = {Design of Mutant Operators for the {C} Programming Language},
  year = 1989
}

@Inproceedings{mathur1991performance,
  author={Mathur, A.P.},
  booktitle={Computer Software and Applications Conference, 1991. COMPSAC '91., Proceedings of the Fifteenth Annual International},
  title={Performance, effectiveness, and reliability issues in software testing},
  year={1991},
  pages={604-605},
  keywords={program testing;software reliability;dataflow;effectiveness;mutation testing;performance;reliability issues;software testing;Fault detection;Genetic mutations;Parallel machines;Performance evaluation;Software design;Software engineering;Software measurement;Software quality;Software reliability;Software testing},
  doi={10.1109/CMPSAC.1991.170248},
}
@article{offutt1996anexperimental,
  author = {Offutt, A. Jefferson and Lee, Ammei and Rothermel, Gregg and Untch, Roland H. and Zapf, Christian},
  title = {An Experimental Determination of Sufficient Mutant Operators},
  journal = {ACM Trans. Softw. Eng. Methodol.},
  issue_date = {April 1996},
  volume = {5},
  number = {2},
  month = apr,
  year = {1996},
  issn = {1049-331X},
  pages = {99--118},
  numpages = {20},
  url = {http://doi.acm.org/10.1145/227607.227610},
  doi = {10.1145/227607.227610},
  acmid = {227610},
  publisher = {ACM},
  address = {New York, NY, USA},
}


@inproceedings{offutt1993anexperimental,
  author={Offutt, A.J. and Rothermel, G. and Zapf, C.},
  booktitle={Software Engineering, 1993. Proceedings., 15th International Conference on},
  title={An experimental evaluation of selective mutation},
  year={1993},
  pages={100-107},
  keywords={program testing;software engineering;mutants;mutation testing;selective mutation;unit-testing software;Application software;Approximation methods;Automatic testing;Computational efficiency;Costs;Fault detection;Genetic mutations;Software quality;Software testing;System testing},
  doi={10.1109/ICSE.1993.346062},
  ISSN={0270-5257},
}

@inproceedings{antoniol2008isitabug,
  author = {Antoniol, Giuliano and Ayari, Kamel and Di Penta, Massimiliano and Khomh, Foutse and Gu{\'e}h{\'e}neuc, Yann-Ga\"{e}l},
  title = {Is It a Bug or an Enhancement?: A Text-based Approach to Classify Change Requests},
  booktitle = {Proceedings of the 2008 Conference of the Center for Advanced Studies on Collaborative Research: Meeting of Minds},
  series = {CASCON '08},
  year = {2008},
  location = {Ontario, Canada},
  pages = {23:304--23:318},
  articleno = {23},
  numpages = {15},
  url = {http://doi.acm.org/10.1145/1463788.1463819},
  doi = {10.1145/1463788.1463819},
  acmid = {1463819},
  publisher = {ACM},
  address = {New York, NY, USA},
}

@misc{crm114,
    author = {CRM114},
    title = {CRM114 Classifier},
    howpublished = {\url{http://crm114.sourceforge.net}},
    urldate = {2013-12-29}
}

@misc{github,
    author = {{GitHub Inc.}},
    title = {Software Repository},
    howpublished = {\url{http://www.github.com}},
    urldate = {2013-07-06}
}
@misc{gitlang,
    author = {{GitHub Inc.}},
    title = {GitHub Languages},
    howpublished = {\url{http://www.github.com/languages}},
    urldate = {2013-07-06}
}
@misc{tiobe,
    author = {{TIOBE}},
    title = {TIOBE Index},
    howpublished = {\url{http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html}},
    urldate = {2013-07-06}
}
@misc{emma,
    author = {Vlad Roubtsov and Others},
    title = {Emma - A free Java code coverage tool},
    howpublished = {\url{http://emma.sourceforge.net/}},
    urldate = {2013-07-06}
}
@misc{codecover,
    author = {Rainer Schmidberger and Others},
    title = {CodeCover - an open-source glass-box testing tool},
    howpublished = {\url{http://codecover.org/}},
    urldate = {2013-07-06}
}
@misc{cobertura,
    author = {Mark Doliner and Others},
    title = {Cobertura - A code coverage utility for Java.},
    howpublished = {\url{http://cobertura.github.io/cobertura}},
    urldate = {2013-07-06}
}
@misc{mockit,
    author = {Rog√©rio Liesenfeld},
    title = {JMockit - A developer testing toolkit for Java},
    howpublished = {\url{http://code.google.com/p/jmockit/}},
    urldate = {2013-07-06}
}
@misc{pitest,
    author = {Henry Coles},
    title = {PIT Mutation Testing},
    howpublished = {\url{http://pittest.org/}},
    urldate = {2013-07-06}
}
@article{rice1953classes,
  title={Classes of recursively enumerable sets and their decision problems},
  author={Rice, Henry Gordon},
  journal={Transactions of the American Mathematical Society},
  volume={74},
  number={2},
  pages={358--366},
  year={1953},
  publisher={JSTOR}
}

@article{beizer20672software,
  title={Software testing techniques},
  author={Beizer, Boris},
  journal={New York, ISBN: 0-442-20672-0},
  year={1990}
}

@book{ecsc,
  publisher={European Cooperation for Space Coordination, Space product assurance - Software product assurance},
  author={ESA Requirements and Standards Division},
  title={ECSS-Q-ST-80C, Section 6.2.3.2},
  year={2009}
}



* Efficient mutation testing by checking invariant violations
Checking for equivalent mutationss
@inproceedings{schuler2009efficient,
  title={Efficient mutation testing by checking invariant violations},
  author={Schuler, David and Dallmeier, Valentin and Zeller, Andreas},
  booktitle={Proceedings of the eighteenth international symposium on Software testing and analysis},
  pages={69--80},
  year={2009},
  organization={ACM}
}

* On Mutation
Mutation testing is better at finding faults than other techniques.
@techreport{acree1980mutation,
  title={On Mutation.},
  author={Acree Jr, Allen Troy},
  year={1980},
  institution={DTIC Document}
}

* A measure of test case completeness (software, engineering)},
Mutation testing is better at finding faults than other techniques.
@phdthesis{Walsh:1985:MTC:912107,
  author = {Walsh, Patrick Joseph},
  title = {A measure of test case completeness (software, engineering)},
  year = {1985},
  note = {AAI8514636},
  publisher = {State University of New York at Binghamton},
  address = {Binghamton, NY, USA},
}

Mutation analysis
Mutation testing is better at finding faults than other techniques.
@book{budd1979mutation,
  title={Mutation analysis},
  author={Budd, Timothy A and Lipton, Richard J and DeMillo, Richard A and Sayward, Frederick G},
  year={1979},
  publisher={Yale University, Department of Computer Science}
}


* On the effectiveness of the test-first approach to programming
TDD introduction
@article{erdogmus2005ontheeffectiveness,
  author={Erdogmus, H. and Morisio, Maurizio and Torchiano, Marco},
  journal={Software Engineering, IEEE Transactions on},
  title={On the effectiveness of the test-first approach to programming},
  year={2005},
  volume={31},
  number={3},
  pages={226-237},
  keywords={program debugging;program testing;software quality;formal verification;general programming technique;program debugging;program testing;software engineering process;software quality;test-driven development;Computer Society;Debugging;Feedback;Functional programming;Productivity;Programming profession;Quality assurance;Software quality;Software testing;Writing;Index Terms- General programming techniques;Software Quality/SQA;coding tools and techniques;productivity;programming paradigms.;software engineering process;testing and debugging;testing strategies},
  doi={10.1109/TSE.2005.37},
  ISSN={0098-5589},
}

@inproceedings{andrews2005mutation,
  title={Is mutation an appropriate tool for testing experiments?},
  author={Andrews, James H and Briand, Lionel C and Labiche, Yvan},
  booktitle={Software Engineering, 2005. ICSE 2005. Proceedings. 27th International Conference on},
  pages={402--411},
  year={2005},
  organization={IEEE}
}


* Weak Mutation Testing and Completeness of Test Sets
Introducing week mutation testing
@article{howden1982weakmutation,
  author = {Howden, W. E.},
  title = {Weak Mutation Testing and Completeness of Test Sets},
  journal = {IEEE Trans. Softw. Eng.},
  issue_date = {July 1982},
  volume = {8},
  number = {4},
  month = jul,
  year = {1982},
  issn = {0098-5589},
  pages = {371--379},
  numpages = {9},
  url = {http://dx.doi.org/10.1109/TSE.1982.235571},
  doi = {10.1109/TSE.1982.235571},
  acmid = {1313651},
  publisher = {IEEE Press},
  address = {Piscataway, NJ, USA},
  keywords = {Complete, effective, mutations, testing, testing, Complete, effective, mutations},
}

* Decreasing the cost of mutation testing with second-order mutants
Mutation is expensive.
@article{polo2009decreasing,
  title={Decreasing the cost of mutation testing with second-order mutants},
  author={Polo, Macario and Piattini, Mario and Garc{\'\i}a-Rodr{\'\i}guez, Ignacio},
  journal={Software Testing, Verification and Reliability},
  volume={19},
  number={2},
  pages={111--131},
  year={2009},
  publisher={Wiley Online Library}
}

* Efficiency of mutation operators and selective mutation strategies: An empirical study
@article{mresa1999efficiency,
  title={Efficiency of mutation operators and selective mutation strategies: An empirical study},
  author={Mresa, Elfurjani S and Bottaci, Leonardo},
  journal={Software Testing Verification and Reliability},
  volume={9},
  number={4},
  pages={205--232},
  year={1999},
  publisher={Chichester, Sussex, England: J. Wiley, c1992-}
}

* Hints on test data selection: Help for the practicing programmer
Coupling effect
@article{demillo1978hints,
  title={Hints on test data selection: Help for the practicing programmer},
  author={DeMillo, Richard A and Lipton, Richard J and Sayward, Frederick G},
  journal={Computer},
  volume={11},
  number={4},
  pages={34--41},
  year={1978},
  publisher={IEEE}
}

@techreport{lipton1971fault,
  title={Fault Diagnosis of Computer Programs},
  author={Lipton, Richard J},
  institution={Carnegie Mellon Univ.},
  year={1971},
}

@article{mccabe1976complexity,
  title={A complexity measure},
  author={McCabe, Thomas J},
  journal={Software Engineering, IEEE Transactions on},
  number={4},
  pages={308--320},
  year={1976},
  publisher={IEEE}
}


* todo
@article{poston1990power,
  title={The Power of Simple Software Testing Metrics},
  author={Poston, Robert},
  journal={Software Testing Times},
  volume={3},
  number={1993},
  year={1990}
}

* Quote
Although our experiments were designed to measure ectiveness, we also observed that using
these criteria, particularly mutation testing, was costly. Even for these small subject programs, the
human effort needed to check a large number of mutants for equivalence was almost prohibitive
@article{frankl1997all,
  title={All-uses vs mutation testing: an experimental comparison of effectiveness},
  author={Frankl, Phyllis G and Weiss, Stewart N and Hu, Cang},
  journal={Journal of Systems and Software},
  volume={38},
  number={3},
  pages={235--253},
  year={1997},
  publisher={Elsevier}
}
@inproceedings{namin2011theuse,
  author = {Namin, Akbar Siami and Kakarla, Sahitya},
  title = {The Use of Mutation in Testing Experiments and Its Sensitivity to External Threats},
  booktitle = {Proceedings of the 2011 International Symposium on Software Testing and Analysis},
  year = {2011},
  pages = {342--352},
  url = {http://doi.acm.org/10.1145/2001420.2001461},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {experimental design, hand-seeded faults, mutants, mutation testing, real faults, statistical analysis},
}

* Relation between mutation , faults and coverage
@article{andrews2006using,
  title={Using mutation analysis for assessing and comparing testing coverage criteria},
  author={Andrews, James H and Briand, Lionel C and Labiche, Yvan and Namin, Akbar Siami},
  journal={Software Engineering, IEEE Transactions on},
  volume={32},
  number={8},
  pages={608--624},
  year={2006},
  publisher={IEEE}
}

@inproceedings{kintis2010evaluating,
  title={Evaluating mutation testing alternatives: A collateral experiment},
  author={Kintis, Marinos and Papadakis, Mike and Malevris, Nicos},
  booktitle={Software Engineering Conference (APSEC), 2010 17th Asia Pacific},
  pages={300--309},
  year={2010},
  organization={IEEE}
}

@inproceedings{pacheco2007randoop,
  title={Randoop: feedback-directed random testing for Java},
  author={Pacheco, Carlos and Ernst, Michael D},
  booktitle={Companion to the 22nd ACM SIGPLAN conference on Object-oriented programming systems and applications companion},
  pages={815--816},
  year={2007},
  organization={ACM}
}

@mastersthesis{kakarla2010analysis,
  title={An Analysis of Parameters Influencing Test Suite Effectiveness},
  author={Kakarla, Sahitya},
  year={2010},
  school={Texas Tech University}
}

@mastersthesis{inozemtseva2012predicting,
  title={Predicting Test Suite Effectiveness for Java Programs},
  author={Inozemtseva, Laura Michelle McLean},
  year={2012},
  school={University of Waterloo}
}

@inproceedings{namin2009influence,
  title={The influence of size and coverage on test suite effectiveness},
  author={Namin, Akbar Siami and Andrews, James H},
  booktitle={Proceedings of the eighteenth international symposium on Software testing and analysis},
  pages={57--68},
  year={2009},
  organization={ACM}
}


* Investigations of the software testing coupling effect
Offutt showed empirical support for one of the basic premises of mutation testing, that a test data set that detects simple faults (such as those introduced by mutation) will detect complex faults, i.e., the combination of several simple faults.
@article{offutt1992investigations,
  title={Investigations of the software testing coupling effect},
  author={Offutt, A Jefferson},
  journal={ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume={1},
  number={1},
  pages={5--20},
  year={1992},
  publisher={ACM}
}
The Coupling Effect: Fact or Fiction? '89, Offut

@techreport{offutt1996subsumption,
  author={A. Jefferson Offutt and Jeffrey M. Voas},
  title={Subsumption of condition coverage techniques by mutation testing},
  institution={},
  year = {1996}
}
article{offutt1996subsumption,
  title={Subsumption of condition coverage techniques by mutation testing},
  author={Offutt, A Jefferson and Voas, Jeffrey M},
  year={1996},
  publisher={Citeseer}
}

@book{ammann2008introduction,
  title={Introduction to software testing},
  author={Ammann, Paul and Offutt, Jeff},
  year={2008},
  publisher={Cambridge University Press}
}

@book{young2008software,
  title={Software testing and analysis: process, principles, and techniques},
  author={Young, Michal},
  year={2008},
  publisher={John Wiley \& Sons}
}
cited in (path subsumes branch.)
@phdthesis{sarabi2012evaluation,
  title={Evaluation of Structural Testing Effectiveness in Industrial Model-driven Software Development},
  author={Sarabi, Mahdi},
  year={2012},
  school={M{\"a}lardalen University}
}

@article{myer1979art,
  title={The art of software testing},
  author={Myers, Glenford J},
  journal={A Willy-Interscience Pub},
  year={1979}
}

@article{frankl1993formal,
  title={A formal analysis of the fault-detecting ability of testing methods},
  author={Frankl, Phyllis G. and Weyuker, Elaine J.},
  journal={Software Engineering, IEEE Transactions on},
  volume={19},
  number={3},
  pages={202--213},
  year={1993},
  publisher={IEEE}
}

* An analysis of the coupling effect I: single test data
Coupling effect holds so long as the programs are small enough.
@article{how2003analysis,
  title={An analysis of the coupling effect I: single test data},
  author={How Tai Wah, KS},
  journal={Science of Computer Programming},
  volume={48},
  number={2},
  pages={119--161},
  year={2003},
  publisher={Elsevier}
}

@misc{ecssqst80c,
  title={ECSS-Q-ST-80C. ESA Requirements and Standards Division},
  author={European Cooperation for Space Coordination Space product assurance - Software product assurance},
  year={2009}
}

@inproceedings{groce2009quickly,
  title={(Quickly) testing the tester via path coverage},
  author={Groce, Alex},
  booktitle={Proceedings of the Seventh International Workshop on Dynamic Analysis},
  pages={22--28},
  year={2009},
  organization={ACM}
}


Is Branch Coverage a Good Measure of Testing Effectiveness?
@incollection{wei2012branch,
  author = {Wei, Yi and Meyer, Bertrand and Oriol, Manuel},
  chapter = {Is branch coverage a good measure of testing effectiveness?},
  title = {Empirical Software Engineering and Verification},
  editor = {Meyer, Bertrand and Nordio, Martin},
  year = {2012},
  isbn = {978-3-642-25230-3},
  pages = {194--212},
  numpages = {19},
  url = {http://dl.acm.org/citation.cfm?id=2184075.2184080},
  acmid = {2184080},
  publisher = {Springer-Verlag},
  address = {Berlin, Heidelberg},
  keywords = {branch coverage, experimental evaluation, random testing},
}

Reviewing 25 Years of Testing Technique Experiments
Is Mutation Testing Scalable for Real-World Software Projects?
All uses mutation testing: An experimental comparison of effectiveness.
Predicting Test Suite Effectiveness for Java Programs : check summary/citation of other papers.
http://www.ece.ubc.ca/~irenek/techpaps/mutate/mutation.html
http://www.cs.gmu.edu/~offutt/rsrch/sejournals.html

@article{usaola2010mutation,
  title={Mutation testing cost reduction techniques: a survey},
  author={Usaola, Macario Polo and Mateo, Pedro Reales},
  journal={Software, IEEE},
  volume={27},
  number={3},
  pages={80--86},
  year={2010},
  publisher={IEEE}
}

@incollection{offutt2001mutation,
  title={Mutation 2000: Uniting the orthogonal},
  author={Offutt, A Jefferson and Untch, Roland H},
  booktitle={Mutation testing for the new century},
  pages={34--44},
  year={2001},
  publisher={Springer}
}

@incollection{eldh2007component,
  title={Component testing is not enough-a study of software faults in telecom middleware},
  author={Eldh, Sigrid and Punnekkat, Sasikumar and Hansson, Hans and J{\"o}nsson, Peter},
  booktitle={Testing of Software and Communicating Systems},
  pages={74--89},
  year={2007},
  publisher={Springer}
}

@article{ostrand2005predicting,
  title={Predicting the location and number of faults in large software systems},
  author={Ostrand, Thomas J and Weyuker, Elaine J and Bell, Robert M},
  journal={Software Engineering, IEEE Transactions on},
  volume={31},
  number={4},
  pages={340--355},
  year={2005},
  publisher={IEEE}
}

@article{purushothaman2005toward,
  title={Toward understanding the rhetoric of small source code changes},
  author={Purushothaman, Ranjith and Perry, Dewayne E},
  journal={Software Engineering, IEEE Transactions on},
  volume={31},
  number={6},
  pages={511--526},
  year={2005},
  publisher={IEEE}
}

@article{gourlay1983mathematical,
  title={A mathematical framework for the investigation of testing},
  author={Gourlay, John S.},
  journal={Software Engineering, IEEE Transactions on},
  number={6},
  pages={686--709},
  year={1983},
  publisher={IEEE}
}

@inproceedings{harman2010manifesto,
  title={A manifesto for higher order mutation testing},
  author={Harman, Mark and Jia, Yue and Langdon, William B},
  booktitle={Software Testing, Verification, and Validation Workshops (ICSTW), 2010 Third International Conference on},
  pages={80--89},
  year={2010},
  organization={IEEE}
}

X. Cai and M. R. Lyu. The effect of code coverage on fault detection under different testing profiles. In International Workshop on Advances in Model-Based Testing, pages 1‚Äì7, 2005
 investigated the correlation between different coverage criteria‚Äîbranch coverage, decision cover- age, P-use, and C-use‚Äîand fault detection, using a linear regression model
 Their results showed that coverage criteria were only a moderate indicator for fault detection, with large variance for different test suites.

@inproceedings{cai2005effect,
  title={The effect of code coverage on fault detection under different testing profiles},
  author={Cai, Xia and Lyu, Michael R},
  booktitle={ACM SIGSOFT Software Engineering Notes},
  volume={30},
  number={4},
  pages={1--7},
  year={2005},
  organization={ACM}
}

@article{jia2011analysis,
  title={An analysis and survey of the development of mutation testing},
  author={Jia, Yue and Harman, Mark},
  journal={Software Engineering, IEEE Transactions on},
  volume={37},
  number={5},
  pages={649--678},
  year={2011},
  publisher={IEEE}
}

@article{gupta2008approach,
  title={An approach for experimentally evaluating effectiveness and efficiency of coverage criteria for software testing},
  author={Gupta, Atul and Jalote, Pankaj},
  journal={International Journal on Software Tools for Technology Transfer},
  volume={10},
  number={2},
  pages={145--160},
  year={2008},
  publisher={Springer}
}

@inproceedings{li2009experimental,
  title={An experimental comparison of four unit test criteria: Mutation, edge-pair, all-uses and prime path coverage},
  author={Li, Nan and Praphamontripong, Upsorn and Offutt, Jeff},
  booktitle={Software Testing, Verification and Validation Workshops, 2009. ICSTW'09. International Conference on},
  pages={220--229},
  year={2009},
  organization={IEEE}
}

@inproceedings{gopinath2014code,
  title={Code Coverage for Suite Evaluation by Developers},
  author={Gopinath, Rahul and Jensen, Carlos and Groce, Alex},
  booktitle={36th International Conference on Software Engineering},
  year={2014}
}
Software unit test coverage and adequacy : ACM computing survey
@incollection{codecoverage,
  author={Gopinath, Rahul},
  year={2013-09},
  title={Code Coverage and Metrics},
  booktitle={\url{http://hdl.handle.net/1902.1/22193} UNF:5:u0boYDAo3hrpukL5XZE0oQ==},
  publisher={Harward Dataverse Network V1},
}
misc{codecoverage,
  author={Gopinath, Rahul},
  year={2013-09},
  title={Code Coverage and Metrics}
  publisher={Harvard Dataverse Network V1}
}

@inproceedings{HassanAndrewsICSE2013,
  title={Comparing multi-point stride coverage and dataflow coverage},
  author={Hassan, Mohammad Mahdi and Andrews, James H},
  booktitle={Proceedings of the 2013 International Conference on Software Engineering},
  pages={172--181},
  year={2013},
  organization={IEEE Press}
}

@inproceedings{pacheco2007feedback,
  title={Feedback-directed random test generation},
  author={Pacheco, Carlos and Lahiri, Shuvendu K and Ernst, Michael D and Ball, Thomas},
  booktitle={Software Engineering, 2007. ICSE 2007. 29th International Conference on},
  pages={75--84},
  year={2007},
  organization={IEEE}
}

@inproceedings{ball2005theory,
  title={A theory of predicate-complete test coverage and generation},
  author={Ball, Thomas},
  booktitle={Formal Methods for Components and Objects},
  pages={1--22},
  year={2005},
  organization={Springer}
}

@techreport{balltheory,
  title={A theory of predicate-complete test coverage and generation, 2004},
  author={Ball, T},
  institution={Microsoft Research Technical Report MSR-TR-2004-28}
}

@techreport{chilenski2001investigation,
  title={An investigation of three forms of the modified condition decision coverage {(MCDC)} criterion},
  author={Chilenski, John J},
  year={2001},
  institution={DTIC Document}
}

@inproceedings{hutchins1994experiments,
  title={Experiments of the effectiveness of dataflow-and controlflow-based test adequacy criteria},
  author={Hutchins, Monica and Foster, Herb and Goradia, Tarak and Ostrand, Thomas},
  booktitle={Proceedings of the 16th international conference on Software engineering},
  pages={191--200},
  year={1994},
  organization={IEEE Computer Society Press}
}

@inproceedings{hassan2013comparing,
  title={Comparing multi-point stride coverage and dataflow coverage},
  author={Hassan, Mohammad Mahdi and Andrews, James H},
  booktitle={Proceedings of the 2013 International Conference on Software Engineering},
  pages={172--181},
  year={2013},
  organization={IEEE Press}
}

@article{frankl-weiss-tse93,
  author = {Phyllis G. Frankl and Stewart N. Weiss},
  title = {An Experimental Comparison of the Effectiveness of Branch
               Testing and Data Flow Testing},
  MIDjournal = {IEEE Trans. Software Eng.},
  LONGjournal = {IEEE Transactions on Software Engineering},
  journal = {Trans. Software Eng.},
  volume = {19},
  LONGnumber = {8},
  year = {1993},
  pages = {774-787},
}

@article{barbosa2001toward,
  title={Toward the determination of sufficient mutant operators for C},
  author={Barbosa, Ellen Francine and Maldonado, Jos{\'e} Carlos and Vincenzi, Auri Marcelo Rizzo},
  journal={Software Testing, Verification and Reliability},
  volume={11},
  number={2},
  pages={113--136},
  year={2001},
  publisher={Wiley Online Library}
}

@techreport{offutt1996mutation,
  title={Mutation operators for Ada},
  author={Offutt, A Jefferson and Voas, Jeff and Payne, Jeff},
  year={1996},
  institution={Technical Report ISSE-TR-96-09, Information and Software Systems Engineering, George Mason University}
}

@inproceedings{ma2002inter,
  title={Inter-class mutation operators for Java},
  author={Ma, Yu-Seung and Kwon, Yong-Rae and Offutt, Jeff},
  booktitle={Software Reliability Engineering, 2002. ISSRE 2003. Proceedings. 13th International Symposium on},
  pages={352--363},
  year={2002},
  organization={IEEE}
}

@inproceedings{smith2007empirical,
  title={An empirical evaluation of the MuJava mutation operators},
  author={Smith, Ben H and Williams, Laurie},
  booktitle={Testing: Academic and Industrial Conference Practice and Research Techniques-MUTATION, 2007. TAICPART-MUTATION 2007},
  pages={193--202},
  year={2007},
  organization={IEEE}
}

@inproceedings{derezinska2006quality,
  title={Quality assessment of mutation operators dedicated for c\# programs},
  author={Derezinska, Anna},
  booktitle={Quality Software, 2006. QSIC 2006. Sixth International Conference on},
  pages={227--234},
  year={2006},
  organization={IEEE}
}

@article{ma2009statistical,
  title={Statistical investigation on class mutation operators},
  author={Ma, Yu-Seung and Kwon, Yong-Rae and Kim, Sang-Woon},
  journal={ETRI journal},
  volume={31},
  number={2},
  pages={140--150},
  year={2009}
}

@inproceedings{zhang2010operator,
  title={Is operator-based mutant selection superior to random mutant selection?},
  author={Zhang, Lu and Hou, Shan-Shan and Hu, Jun-Jue and Xie, Tao and Mei, Hong},
  booktitle={Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering-Volume 1},
  pages={435--444},
  year={2010},
  organization={ACM}
}

@article{ma2005description,
  title={Description of method-level mutation operators for java},
  author={Ma, Yu-Seung and Offutt, Jeff},
  journal={Electronics and Telecommunications Research Institute, Korea, Tech. Rep},
  year={2005}
}

@article{king1991fortran,
  title={A fortran language system for mutation-based software testing},
  author={King, Kim N and Offutt, A Jefferson},
  journal={Software: Practice and Experience},
  volume={21},
  number={7},
  pages={685--718},
  year={1991},
  publisher={Wiley Online Library}
}

@inproceedings{zhang2013ase,
  title={Operator-Based and Random Mutant Selection: Better Together},
  author={Zhang,Lingming and Gligoric, Milos and Marinov, Darko  and Khurshid, Sarfraz},
  booktitle={IEEE/ACM International Conference on Automated Software Engineering},
  year={2013},
  publisher={ACM}
}

@inproceedings{zhang2010icse,
 author = {Zhang, Lu and Hou, Shan-Shan and Hu, Jun-Jue and Xie, Tao and Mei, Hong},
 title = {Is Operator-based Mutant Selection Superior to Random Mutant Selection?},
 booktitle = {Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering - Volume 1},
 series = {ICSE '10},
 year = {2010},
 isbn = {978-1-60558-719-6},
 location = {Cape Town, South Africa},
 pages = {435--444},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1806799.1806863},
 doi = {10.1145/1806799.1806863},
 acmid = {1806863},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {mutation testing, test-adequacy criterion},
}

@inproceedings{zhang2013injecting,
 author = {Zhang, Lingming and Zhang, Lu and Khurshid, Sarfraz},
 title = {Injecting Mechanical Faults to Localize Developer Faults for Evolving Software},
 booktitle = {Proceedings of the 2013 ACM SIGPLAN International Conference on Object Oriented Programming Systems Languages \&\#38; Applications},
 series = {OOPSLA '13},
 year = {2013},
 isbn = {978-1-4503-2374-1},
 location = {Indianapolis, Indiana, USA},
 pages = {765--784},
 numpages = {20},
 url = {http://doi.acm.org/10.1145/2509136.2509551},
 doi = {10.1145/2509136.2509551},
 acmid = {2509551},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {fault localization, mutation testing, regression testing, software evolution},
}

@inproceedings{nam2011calibrated,
  author = {Nam, Jaechang and Schuler, David and Zeller, Andreas},
  title = {Calibrated Mutation Testing},
  booktitle = {Proceedings of the 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops},
  series = {ICSTW '11},
  year = {2011},
  isbn = {978-0-7695-4345-1},
  pages = {376--381},
  numpages = {6},
  url = {http://dx.doi.org/10.1109/ICSTW.2011.57},
  doi = {10.1109/ICSTW.2011.57},
  acmid = {2005526},
  publisher = {IEEE Computer Society},
  address = {Washington, DC, USA},
  keywords = {mutation testing, version control, bug database},
}

@article{kolmogorov1933sulla,
  title={Sulla determinazione empirica di una legge di distribuzione},
  author={Kolmogorov, Andrey N},
  journal={Giornale dell‚ÄôIstituto Italiano degli Attuari},
  volume={4},
  number={1},
  pages={83--91},
  year={1933}
}
@inproceedings{mokus2000identifying,
  author={Mockus, A. and Votta, L.G.},
  booktitle={Software Maintenance, 2000. Proceedings. International Conference on},
  title={Identifying reasons for software changes using historic databases},
  year={2000},
  pages={120-130},
  keywords={configuration management;management of change;reverse engineering;software maintenance;temporal databases;automatic classification;change management system;changing environment;code           restructuring;developer opinions;historic data;historic databases;large scale software products;legacy software systems;maintenance activity;perfective changes;software changes;software project;textual   description;textual description field;version control data;Reverse engineering},
  doi={10.1109/ICSM.2000.883028},
  ISSN={1063-6773},
}

@inproceedings{deng2013empirical,
  author={Lin Deng and Jeff Offutt and Nan Li},
  title={Empirical Evaluation of the Statement Deletion Mutation Operator},
  booktitle={IEEE 6th International Conference on Software Testing, Verification and Validation.},
  year=2013,
  address={Luxembourg},
}
@inproceedings{delamaro2014experimental,
  author={Marcio Eduardo Delamaro and Lin Deng and Nan Li and Vinicius Durelli and Jeff Offutt},
  title={Experimental Evaluation of SDL and One-Op Mutation for C},
  booktitle={IEEE 7th International Conference on Software Testing, Verification and Validation},
  year=2014,
  address={Cleveland, Ohio, USA},
  notes={ToAppear},
}
@inproceedings{offutt1993experimental,
  title={An experimental evaluation of selective mutation},
  author={Offutt, A Jefferson and Rothermel, Gregg and Zapf, Christian},
  booktitle={Proceedings of the 15th international conference on Software Engineering},
  pages={100--107},
  year={1993},
  organization={IEEE Computer Society Press}
}
@article{wong1995reducing,
  title = "Reducing the cost of mutation testing: An empirical study ",
  journal = "Journal of Systems and Software ",
  volume = "31",
  number = "3",
  pages = "185 - 196",
  year = "1995",
  note = "",
  issn = "0164-1212",
  doi = "http://dx.doi.org/10.1016/0164-1212(94)00098-0",
  url = "http://www.sciencedirect.com/science/article/pii/0164121294000980",
  author = "W.Eric Wong and Aditya P. Mathur",
  abstract = "Of the various testing strategies, mutation testing has been empirically found to be effective in detecting faults. However, mutation often imposes unacceptable demands on computing    and human resources because of the large number of mutants that need to be compiled and executed on one or more test cases. In addition, the tester needs to examine many mutants and analyze these  for possible equivalence with the program under test. For these reasons, mutation is generally regarded as too expensive to use. Because one significant component of the cost of mutation is the    execution of mutants against test cases, we believe that this cost can be reduced dramatically by reducing the number of mutants that need to be examined. We report results from a case study       designed to investigate two alternatives for reducing the cost of mutation. The alternatives considered are randomly selected x% mutation and constrained abs/ror mutation. We provide experimental  data indicating that both alternatives lead to test sets that distinguish a significant number of nonequivalent mutants and provide high all-uses coverage. "
}

@phdthesis{wong1993mutation,
  title={On mutation and data flow},
  author={Wong, Weichen Eric},
  year={1993},
  school={Citeseer}
}

@inproceedings{siami2008sufficient,
  title={Sufficient mutation operators for measuring test effectiveness},
  author={Siami Namin, Akbar and Andrews, James H and Murdoch, Duncan J},
  booktitle={Proceedings of the 30th international conference on Software engineering},
  pages={351--360},
  year={2008},
  organization={ACM}
}

@inproceedings{namin2006finding,
  title={Finding sufficient mutation operators via variable reduction},
  author={Namin, A Siami and Andrews, James H},
  booktitle={Proceedings of the 2nd Workshop on Mutation Analysis (MUTATION‚Äô06)},
  pages={5},
  year={2006}
}


@inproceedings{untch2009onreduced,
  author = {Untch, Roland H.},
  title = {On Reduced Neighborhood Mutation Analysis Using a Single Mutagenic Operator},
  booktitle = {Proceedings of the 47th Annual Southeast Regional Conference},
  series = {ACM-SE 47},
  year = {2009},
  isbn = {978-1-60558-421-8},
  location = {Clemson, South Carolina},
  pages = {71:1--71:4},
  articleno = {71},
  numpages = {4},
  url = {http://doi.acm.org/10.1145/1566445.1566540},
  doi = {10.1145/1566445.1566540},
  acmid = {1566540},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {constrained mutation, mutation analysis, reduced neighborhood mutation, software testing, sufficient mutant operators},
}

@inproceedings{daran1996software,
  author = {Daran, Murial and Th{\'e}venod-Fosse, Pascale},
  title = {Software Error Analysis: A Real Case Study Involving Real Faults and Mutations},
  booktitle = {Proceedings of the 1996 ACM SIGSOFT International Symposium on Software Testing and Analysis},
  series = {ISSTA '96},
  year = {1996},
  isbn = {0-89791-787-1},
  location = {San Diego, California, USA},
  pages = {158--171},
  numpages = {14},
  url = {http://doi.acm.org/10.1145/229000.226313},
  doi = {10.1145/229000.226313},
  acmid = {226313},
  publisher = {ACM},
  address = {New York, NY, USA},
}

@inproceedings{duraes2003definition,
  author={Duraes, J. and Madeira, H.},
  booktitle={Dependable Systems and Networks, 2003. Proceedings. 2003 International Conference on},
  title={Definition of software fault emulation operators: a field data study},
  year={2003},
  pages={105-114},
  keywords={Application software;Computer industry;Emulation;Genetic mutations;Programming profession;Risk management;Software performance;Software reliability;Software testing;Software tools},
  doi={10.1109/DSN.2003.1209922},
}

@inproceedings{christmansson1996generation,
  author={Christmansson, J. and Chillarege, R.},
  booktitle={Fault Tolerant Computing, 1996., Proceedings of Annual Symposium on},
  title={Generation of an error set that emulates software faults based on field data},
  year={1996},
  pages={304-313},
  keywords={program testing;program verification;software fault tolerance;IBM operating system;Tandem Guardian90 operating system;error categories;error set;fault injection experiments;field data;software faults;Acceleration;Analytical models;Computer errors;Data engineering;Hardware;Operating systems;Predictive models;Software engineering},
  doi={10.1109/FTCS.1996.534615},
  ISSN={0731-3071},
}

@article{duraes2006emulation,
  author={Duraes, J.A. and Madeira, H.S.},
  journal={Software Engineering, IEEE Transactions on},
  title={Emulation of Software Faults: A Field Data Study and a Practical Approach},
  year={2006},
  volume={32},
  number={11},
  pages={849-867},
  keywords={program testing;software fault tolerance;software performance evaluation;software portability;G-SWFIT;computer system;emulation accuracy;fault representation;fault tolerance mechanism;field data study;machine code-level;programming structure;programming structures;software fault injection technique;Computer bugs;Computer industry;Emulation;Fault tolerant systems;Hardware;Programming;Software measurement;Software reliability;Software systems;Software testing;Fault injection;software faults;software reliability.},
  doi={10.1109/TSE.2006.113},
  ISSN={0098-5589},
}

@inproceedings{christmansson1996error,
  author={Christmansson, J. and Santhanam, P.},
  booktitle={Software Reliability Engineering, 1996. Proceedings., Seventh International Symposium on},
  title={Error injection aimed at fault removal in fault tolerance mechanisms-criteria for error selection using field data on software faults},
  year={1996},
  pages={175-184},
  keywords={program testing;software fault tolerance;error injection experiment;error selection;fault injection;fault removal;fault tolerance;fault tolerant systems;fault types;formal verification;software faults;system test environment;Analytical models;Application software;Computer errors;Fault detection;Fault tolerance;Fault tolerant systems;Formal verification;Operating systems;Software testing;System testing},
  doi={10.1109/ISSRE.1996.558785},
}

@article{pan2009toward,
  author = {Pan, Kai and Kim, Sunghun and Whitehead,Jr., E. James},
  title = {Toward an Understanding of Bug Fix Patterns},
  journal = {Empirical Softw. Engg.},
  issue_date = {June      2009},
  volume = {14},
  number = {3},
  month = jun,
  year = {2009},
  issn = {1382-3256},
  pages = {286--315},
  numpages = {30},
  url = {http://dx.doi.org/10.1007/s10664-008-9077-5},
  doi = {10.1007/s10664-008-9077-5},
  acmid = {1553603},
  publisher = {Kluwer Academic Publishers},
  address = {Hingham, MA, USA},
  keywords = {Algorithms, Bug fix changes, Categorization of software faults, Causes of software bugs, Experimentation, Measurement, Software bugs, Software error, Software fault, Software fault taxonomy},
}

