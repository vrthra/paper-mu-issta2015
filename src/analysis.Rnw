\section{Analysis}
\label{sec:analysis}

First, we ran the the mutation analysis to identify the general distribution of mutants within our set of projects.
This provided us with the relative number of each mutation operators, that are produced, and also the general number of
mutants generated by each operator that was detected. This is given in Figure~\ref{fig:op}. This suggests that the operators
are distributed in the following order: \pitnvmc, \pitnc, \pitrc, \pitdc, \pitrv, \pitic, \pitcc, \pitemv, \pitvmc, \pitm,
\pitcb, \piti, \pitri, \pitrs, \pites, \pitin. We use this information later for n-selective mutation.

For comparing between different techniques, we ran correlation analysis between the full mutation score,
and that produced by the reduction criteria. Further, we also collected the mean reduction, and the standard
deviation of the reduction across all the projects for both randoop and original. These statistics are provided below.
\subsection{Sampling Criteria}
% We have power, element, kind(O/R), and MuRed, MuRedSD, R^2
\subsubsection{x\% selection}
<<xpercentunit>>=
sel.colnames <- c('operator', 'r.square', 'mutant.reduction', 'sd.reduction', 'sample', 'score.multiplier')
new.colnames <- c('operator', 'r^2',      'm.red',            'm.sd',         'num',    'B*')
stats.xp <- subset(stats.df, grepl('^(r|rr|rc)[.]', operator)) # We are ignoring ceil here. add rc if needed.

o.stats.sel.xp <- subset(o.f(stats.xp), select=sel.colnames)
r.stats.sel.xp <- subset(r.f(stats.xp), select=sel.colnames)
stats.rest <- subset(stats.df, !grepl('^(r|rr|rc)[.]', operator))
colnames(o.stats.sel.xp) <- new.colnames
colnames(r.stats.sel.xp) <- new.colnames
@
\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(subset(o.stats.sel.xp, grepl('^r[.]', operator)), caption='Original', label='table:rando', main='Original'), include.rownames=FALSE, floating=FALSE, size='\\small')
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(subset(r.stats.sel.xp, grepl('^r[.]', operator)), caption='Randoop', label='table:randr', main='Randoop'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\bigskip
\caption {The round(x)\% random selection criteria results.}
\label{tbl:xsel}
\end{table*}

\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(subset(o.stats.sel.xp, grepl('^rr[.]', operator)), caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE, size='\\small')
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(subset(r.stats.sel.xp, grepl('^rr[.]', operator)), caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\bigskip
\caption {The sample(x)\% random selection criteria results.}
\label{tbl:xsel2}
\end{table*}

\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(subset(o.stats.sel.xp, grepl('^rc[.]', operator)), caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE, size='\\small')
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(subset(r.stats.sel.xp, grepl('^rc[.]', operator)), caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\bigskip
\caption {The ceil(x)\% random selection criteria results.}
\label{tbl:xsel2}
\end{table*}

\begin{figure*}[t]
<<x.per.sel.round,fig.width=10, fig.height=10, out.width='.95\\linewidth', out.heigth='8in', echo=F, message=F, warn=F,fig.lp="fig:">>=
theme_set(theme_bw(12))
myopts <- theme(panel.background = element_blank())
#myopts <-   theme_bw() +
#  opts(axis.line = theme_segment(colour = "black"),
#    panel.grid.major = theme_blank(),
#    panel.grid.minor = theme_blank(),
#    panel.border = theme_blank(),
#    panel.background = theme_blank())
  #theme with white background
#myopts <- theme_bw() +
  #eliminates background, gridlines, and chart border
#  theme(
#    plot.background = element_blank()
#   ,panel.grid.major = element_blank()
#   ,panel.grid.minor = element_blank()
#   ,panel.border = element_blank()
#  ) +
  #draws x and y axis line
#  theme(axis.line = element_line(color = 'black'))
#myopts <-  opts() #theme_classic()
#+ opts(strip.background = theme_rect(colour = 'NA', fill = 'NA')) + opts(strip.text.y = theme_text(colour = 'white')) + theme(axis.line = element_line(color = 'black'))

# TODO - replace by o.processed.
o.xp <- subset(o.processed, grepl('^r[.].*.m[.]red',ind))
ggplot(subset(o.xp, values < 100), aes(power, values, fill=interaction(type,power), dodge=type)) +
  stat_boxplot(geom ='errorbar')+
  geom_boxplot() + facet_wrap(~type)+ myopts
@
\caption{The effect of round(x) reduction, Except for line sampling of power $5$ and $6$ all others are above 0.90 $R^2$.}
\label{fig:xroundsel}
\end{figure*}

\begin{figure*}[t]
<<x.per.sel.sample,fig.width=10, fig.height=10, out.width='.95\\linewidth', out.heigth='8in', echo=F, message=F, warn=F,fig.lp="fig:">>=
o.xp <- subset(o.processed, grepl('^rr[.].*.m[.]red',ind))
ggplot(subset(o.xp, values < 100), aes(power, values, fill=interaction(type,power), dodge=type)) +
  stat_boxplot(geom ='errorbar')+
  geom_boxplot() + facet_wrap(~type) + myopts
@
\caption{The effect of sample(x) reduction. All are above 0.90 $R^2$.}
\label{fig:xsamplesel}
\end{figure*}
%TODO : See if the following paragraph is needed, or shall we just sink the ceil(x) discussion completely?
Our experiments found that while $round(x)$ and $sample(x)$ produced relatively reasonable reduction of mutants, the $ceil(x)$ criteria failed to produce a reasonable reduction of mutants except for higher power where the reduction was some what close to that produced by $round(x)$ and $sample(x)$ (which was expected). The $R^2$ values of $ceil(x)$ were almost always lower than that produced by $round(x)$ and $sample(x)$ for similar reduction of mutants. For this reason, we do not consider this function again. However, interested parties can refer to our published data.

The reduction in mutants for x\% selection using $round(x)$ is graphed in Figure~\ref{fig:xroundsel}. The values for the same are given in Table~\ref{tbl:xsel}.
Similarly reduction in mutants for x\% selection using $sample(x)$ is graphed in Figure~\ref{fig:xsamplesel}. The values for the same are given in Table~\ref{tbl:xsel}.
% ----------------------------------------------------------------------

\subsubsection{Lines per element}
The aim of this criteria is similar in some sense to selective mutation. While n-selective mutation ignores the most numerous mutant species, this criteria seeks to deprioritize the most complex program elements.

<<count>>=
stats.loc <- subset(stats.rest, grepl('^(l|wl)[.]', operator))
o.stats.sel.loc <- subset(o.f(stats.loc), select=sel.colnames)
r.stats.sel.loc <- subset(r.f(stats.loc), select=sel.colnames)
stats.rest <- subset(stats.rest, !grepl('^(l|wl)[.]', operator))
colnames(o.stats.sel.loc) <- new.colnames
colnames(r.stats.sel.loc) <- new.colnames
@
\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(o.stats.sel.loc, caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE, size='\\small')
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(r.stats.sel.loc, caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\caption {The line count selection criteria results.}
\label{tbl:locsel}
\end{table*}

\begin{figure*}[t]
<<loc.per.sel.sample,fig.width=10, fig.height=10, out.width='.95\\linewidth', out.heigth='8in', echo=F, message=F, warn=F,fig.lp="fig:">>=
o.loc <- subset(o.processed, grepl('^l[.].*.m[.]red',ind))
ggplot(subset(o.loc, values < 100), aes(power, values, fill=interaction(type,power), dodge=type)) +
  stat_boxplot(geom ='errorbar')+
  geom_boxplot() + facet_wrap(~type) + myopts
@
\caption{The effect of loc (external) reduction. All are above 0.98 $R^2$.}
\label{fig:locsel}
\end{figure*}

\begin{figure*}[t]
<<wloc.per.sel.sample,fig.width=10, fig.height=10, out.width='.95\\linewidth', out.heigth='8in', echo=F, message=F, warn=F,fig.lp="fig:">>=
o.loc <- subset(o.processed, grepl('^wl[.].*.m[.]red',ind))
ggplot(subset(o.loc, values < 100), aes(power, values, fill=interaction(type,power), dodge=type)) +
  stat_boxplot(geom ='errorbar')+
  geom_boxplot() + facet_wrap(~type) + myopts
@
\caption{The effect of loc (internal) reduction. All are above 0.90 $R^2$.}
\label{fig:wlocsel}
\end{figure*}


The results of this selection criteria are provided in Table~\ref{tbl:locsel}. The effect of random selection within the program elements are visualized in Figure~\ref{fig:wlocsel}, and when it is made external to the program elements is visualized in Figure~\ref{fig:wlocsel}.

% ----------------------------------------------------------------------
\subsubsection{One per element}
The aim of this criteria is is to take the previous idea to the extreme. We choose only a single mutant per program element.

<<one>>=
stats.one <- subset(stats.rest, grepl('^o[.]', operator))

o.stats.sel.one <- subset(o.f(stats.one), select=sel.colnames)
r.stats.sel.one <- subset(r.f(stats.one), select=sel.colnames)
stats.rest <- subset(stats.rest, !grepl('^o[.]', operator))
colnames(o.stats.sel.one) <- new.colnames
colnames(r.stats.sel.one) <- new.colnames
@
\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(o.stats.sel.one, caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE, size='\\small')
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(r.stats.sel.one, caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\bigskip
\caption {The one per element selection criteria results.}
\label{tbl:onesel}
\end{table*}

\begin{figure*}[t]
<<one.per.sel.sample,fig.width=10, fig.height=10, out.width='.95\\linewidth', out.heigth='8in', echo=F, message=F, warn=F,fig.lp="fig:">>=
o.one <- subset(o.processed, grepl('^o[.].*.m[.]red',ind))
ggplot(subset(o.one, values < 100), aes(power, values, fill=interaction(type,power), dodge=type)) +
  stat_boxplot(geom ='errorbar')+
  geom_boxplot() + facet_wrap(~type) + myopts
@
\caption{The effect of one element selection, All are above 0.98 $R^2$.}
\label{fig:onesel}
\end{figure*}

The values are given in Table~\ref{tbl:onesel}, and its visaulization is in Figure~\ref{fig:onesel}.
% ----------------------------------------------------------------------
% <<oth>>=
% stats.o <- subset(stats.rest, !grepl('^op', operator))
% o.stats.sel.o <- subset(o.f(stats.o), select=sel.colnames)
% r.stats.sel.o <- subset(r.f(stats.o), select=sel.colnames)
% stats.rest <- subset(stats.rest, grepl('^op', operator))
% colnames(o.stats.sel.o) <- new.colnames
% colnames(r.stats.sel.o) <- new.colnames
% @
% 
% \begin{table*}
% \begin{minipage}[h]{0.49\linewidth}
% <<results='asis'>>=
% print(xtable(o.stats.sel.o, caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE, size='\\small')
% @
% \end{minipage}
% \hspace{0.5cm}
% \begin{minipage}[h]{0.49\linewidth}
% <<results='asis'>>=
% print(xtable(r.stats.sel.o, caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
% @
% \end{minipage}
% \bigskip
% \caption {Others}
% \label{tbl:osel}
% \end{table*}
% 
% ----------------------------------------------------------------------

\subsection{Operator Selection}
\begin{figure*}[t]
<<op.all,fig.width=10, fig.height=5, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
#with(subset(stats.df,r.square > 0.9),plot(mutant.reduction, (1-r.square)*100, pch='*', col=as.factor(strategy)))
# "kind" "operator" "s.power" "s.element" "strategy" "mutant.reduction" "sd.reduction"
#  "sample" "r.square" "score.multiplier" "p.value"

df <-  subset(stats.df, r.square>=0.9 & (sd.reduction * 2) < mutant.reduction) # & mutant.reduction < 20)
df$sqr <- 1 - df$r.square
df$mult <- 1 - df$score.multiplier
df$type <- with(df, as.factor(
      ifelse(grepl('line',operator), 'line',
        ifelse(grepl('block',operator), 'block',
        ifelse(grepl('method',operator), 'method',
          ifelse(grepl('class',operator), 'class',
            ifelse(grepl('project',operator), 'project',
              'selection')))))))
df$strat <- with(df,
    ifelse(grepl('perunit', strategy), 'xpercent',
      ifelse(grepl('op',strategy), 'opsel',
        ifelse(grepl('one',strategy), 'oneperelm',
          ifelse(grepl('elem',strategy), 'loc', 'other'
            )))))
ggplot(df, aes(mutant.reduction, sd.reduction)) + geom_point(aes(size=sqr, color=type))
@
\caption{The mean reduction of mutants vs its standard deviation. The sqr represents (1-$R^2$), i.e smaller is good. Only those observations with $R^2 > 0.9$ and $2\times $ standard deviation > mean reduction is shown here. }
\label{fig:fullimgsize}
\end{figure*}
\begin{figure*}[t]
<<op.all.2,fig.width=10, fig.height=5, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
ggplot(df, aes(mutant.reduction, sd.reduction)) + geom_point(aes(shape=strat, color=type))
@
\caption{The mean reduction of mutants vs its standard deviation. Only those observations with $R^2 > 0.9$ and $2\times $ standard deviation > mean reduction is shown here. }
\end{figure*}

\begin{figure*}[t]
<<op.all.4,fig.width=10, fig.height=5, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
ggplot(df, aes(mutant.reduction, sd.reduction)) + geom_point(aes(shape=strat, color=mult))
@
\caption{The mean reduction of mutants vs its standard deviation. Only those observations with $R^2 > 0.9$ and $2\times $ standard deviation > mean reduction is shown here. The color represents the (1-multiplier) to the sampled mutation score to get final score }
\end{figure*}


\begin{figure*}[t]
<<op.all.3,fig.width=10, fig.height=5, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
dfd <- subset(df, !(strategy %in% c('op','opsel')) )
ggplot(dfd, aes(sd.reduction, mutant.reduction)) + geom_point(aes(shape=type, color=sqr)) + facet_wrap(~strategy) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
@
\label{fig:fullimgshape}
\end{figure*}
<<opsel>>=
stats.op <- subset(stats.rest, grepl('^(op|TSDL)', operator))
o.stats.sel.op <- subset(o.f(stats.op), select=sel.colnames)
r.stats.sel.op <- subset(r.f(stats.op), select=sel.colnames)
stats.rest <- subset(stats.rest, !grepl('^(op|TSDL)', operator))
colnames(o.stats.sel.op) <- new.colnames
colnames(r.stats.sel.op) <- new.colnames
@

\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(o.stats.sel.op, caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE, size='\\small')
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(r.stats.sel.op, caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\bigskip
\caption {Operator Selection}
\label{tbl:opsel}
\end{table*}

For operator selection, we approximated the operators as far as possible from the research works into the operators exposed by PIT. The results of this are provided in Table~\ref{tbl:opsel}. The subsumption graphs are provided in Figure~\ref{fig:subsumptiono}
% TODO : Check if this makes sense.
\begin{figure*}[t]
\includegraphics[totalheight=6cm]{fig/original.pdf}
\caption{Subsumption Original}
\label{fig:subsumptiono}
\end{figure*}

%\begin{figure*}[t]
%\includegraphics[totalheight=6cm]{fig/randoop.pdf}
%\caption{Subsumption Randoop}
%\label{fig:subsumptionr}
%\end{figure*}[t]

% ----------------------------------------------------------------------
