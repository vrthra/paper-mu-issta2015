\section{Analysis}
\label{sec:analysis}
\begin{figure*}[!htb]
<<op,fig.width=10, fig.height=5, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
par(las=1,mfrow = c(1, 2),mar=c(2,8,1,1))
o.all <- cbind(projects = rownames(o.dist.all), stack(o.dist.all))
o.all$ind <- clean(o.all$ind)
bcol <- '#2171B5'
#bcol <- 'darkgray'
icol <- '#9ECAE0'
#icol <- 'lightgray'
o.det <- cbind(projects = rownames(o.dist.det), stack(o.dist.det))
o.det$ind <- clean(o.det$ind)
with(o.det,boxplot(values~ind,horizontal=T,border=c(bcol), col=icol, pch='.', axes=F, ylim=c(0,0.6)))
with(o.all,boxplot(values~ind,horizontal=T,border=c('black'), pch='.',main='Original', cex.axis=0.8, ylim=c(0,0.6),add=T))

r.all <- cbind(projects = rownames(r.dist.all), stack(r.dist.all))
r.all$ind <- clean(r.all$ind)
r.det <- cbind(projects = rownames(r.dist.det), stack(r.dist.det))
r.det$ind <- clean(r.det$ind)
with(r.det,boxplot(values~ind,horizontal=T,border=c(bcol), col=icol, pch='.', axes=F,ylim=c(0,0.6)))
with(r.all,boxplot(values~ind,horizontal=T,border=c('black'), pch='.',main='Randoop', cex.axis=0.8,ylim=c(0,0.6),add=T))
@
\caption{The relative contribution of mutation operators in terms of fraction of mutants generated and detected. \\
The blue shade represent detected mutants, while black represents total mutants.}
\label{fig:op}
\end{figure*}

First, we ran the the mutation analysis to identify the general distribution of mutants within our set of projects.
This provided us with the relative number of each mutation operators, that are produced, and also the general number of
mutants generated by each operator that was detected. This is given in Figure~\ref{fig:op}. This suggests that the operators
are distributed in the following order: \pitnvmc, \pitnc, \pitrc, \pitdc, \pitrv, \pitic, \pitcc, \pitemv, \pitvmc, \pitm,
\pitcb, \piti, \pitri, \pitrs, \pites, \pitin. We use this information later for n-selective mutation.

For comparing between different techniques, we ran correlation analysis between the full mutation score,
and that produced by the reduction criteria. Further, we also collected the mean reduction, and the standard
deviation of the reduction across all the projects for both randoop and original. These statistics are provided below.
\subsection{Analysis of Sampling Criteria}
% We have power, element, kind(O/R), and MuRed, MuRedSD, R^2
\subsubsection{x\% selection}
<<xpercentunit>>=
sel.colnames <- c('operator', 'r.square', 'mutant.reduction', 'sd.reduction', 'sample', 'score.multiplier')
new.colnames <- c('operator', 'r^2',      'm.red',            'm.sd',         'num',    'B*')
stats.xp <- subset(stats.df, grepl('^(r|rr)[.]', operator)) # We are ignoring ceil here. add rc if needed.

o.stats.sel.xp <- subset(o.f(stats.xp), select=sel.colnames)
r.stats.sel.xp <- subset(r.f(stats.xp), select=sel.colnames)
stats.rest <- subset(stats.df, !grepl('^(r|rr|rc)[.]', operator))
colnames(o.stats.sel.xp) <- new.colnames
colnames(r.stats.sel.xp) <- new.colnames

#odata <- subset(o.f(stats.xp), s.element=='project')
#rdata <- subset(r.f(stats.xp), s.element=='project')
@

\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(o.stats.sel.xp, caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE, size='\\small')
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(r.stats.sel.xp, caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\bigskip
\caption {The x\% random selection criteria results.}
\end{table*}

\begin{figure*}[t]
<<x.per.sel.round,fig.width=10, fig.height=10, out.width='.95\\linewidth', out.heigth='8in', echo=F, message=F, warn=F,fig.lp="fig:">>=
o.xp <- subset(o.processed, grepl('^r[.].*.m[.]red',ind))
ggplot(subset(o.xp, values < 100), aes(power, values, fill=interaction(type,power), dodge=type)) +
  stat_boxplot(geom ='errorbar')+
  geom_boxplot() + facet_wrap(~type)
@
\label{fig:sel}
\caption{The effect of round(x) reduction, Except for line sampling of power $5$ and $6$ all others are above 0.90 $R^2$.}
\end{figure*}[t]

\begin{figure*}[t]
<<x.per.sel.sample,fig.width=10, fig.height=10, out.width='.95\\linewidth', out.heigth='8in', echo=F, message=F, warn=F,fig.lp="fig:">>=
o.xp <- subset(o.processed, grepl('^rr[.].*.m[.]red',ind))
ggplot(subset(o.xp, values < 100), aes(power, values, fill=interaction(type,power), dodge=type)) +
  stat_boxplot(geom ='errorbar')+
  geom_boxplot() + facet_wrap(~type)
@
\label{fig:sel}
\caption{The effect of sample(x) reduction. All are above 0.90 $R^2$.}
\end{figure*}[t]




% ----------------------------------------------------------------------
<<count>>=
stats.loc <- subset(stats.rest, grepl('^(l|wl)[.]', operator))

o.stats.sel.loc <- subset(o.f(stats.loc), select=sel.colnames)
r.stats.sel.loc <- subset(r.f(stats.loc), select=sel.colnames)
stats.rest <- subset(stats.rest, !grepl('^(l|wl)[.]', operator))
colnames(o.stats.sel.loc) <- new.colnames
colnames(r.stats.sel.loc) <- new.colnames
@
\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(o.stats.sel.loc, caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE, size='\\small')
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(r.stats.sel.loc, caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\bigskip
\caption {The loc count selection criteria results.}
\end{table*}

% ----------------------------------------------------------------------
<<one>>=
stats.one <- subset(stats.rest, grepl('^o[.]', operator))

o.stats.sel.one <- subset(o.f(stats.one), select=sel.colnames)
r.stats.sel.one <- subset(r.f(stats.one), select=sel.colnames)
stats.rest <- subset(stats.rest, !grepl('^o[.]', operator))
colnames(o.stats.sel.one) <- new.colnames
colnames(r.stats.sel.one) <- new.colnames
@
\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(o.stats.sel.one, caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE, size='\\small')
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(r.stats.sel.one, caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\bigskip
\caption {The one per element selection criteria results.}
\end{table*}

% ----------------------------------------------------------------------





\if 0
% START HERE
\begin{figure*}[t]
<<xx.per.sel,fig.width=5, fig.height=5, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
names=odata$s.power
x = (1:nrow(odata))
o.CI.up = as.numeric(odata$mutant.reduction)+as.numeric(odata$sd.reduction)
o.CI.dn = as.numeric(odata$mutant.reduction)-as.numeric(odata$sd.reduction)
r.CI.up = as.numeric(rdata$mutant.reduction)+as.numeric(rdata$sd.reduction)
r.CI.dn = as.numeric(rdata$mutant.reduction)-as.numeric(rdata$sd.reduction)
plot(odata$mutant.reduction~odata$s.power,xaxt='n', cex=1.5,ylim=c(0,100), xlab='Power',ylab='Reduction', main='Project: Mutant Reduction vs Power',col='blue',pch=16)
axis(1, at=x, labels=names)
arrows(x,o.CI.dn,x,o.CI.up,code=3,length=0.2,angle=90,col='blue')
points(rdata$mutant.reduction~rdata$s.power,xaxt='n', cex=1.5,ylim=c(0,100), xlab='Power',ylab='Reduction', main='Project: Mutant Reduction vs Power',col='red',pch=16)
arrows(x,r.CI.dn,x,r.CI.up,code=3,length=0.2,angle=90,col='red')
#legend("bottomleft",paste(names,": S.E=",data$se),ncol=6,text.width=5)
@
\label{fig:sel}
\end{figure*}[t]

<<>>=
odata <- subset(stats.df, s.element=='class' & strategy=='xpercentperunit' & kind=='original')
rdata <- subset(stats.df, s.element=='class' & strategy=='xpercentperunit' & kind=='randoop')
odata$s.power
odata$mutant.reduction
@
\subsubsection{x\% selection}
\begin{figure*}[t]
<<x.per.sel.class,fig.width=5, fig.height=5, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
names=odata$s.power
x = (1:nrow(odata))
o.CI.up = as.numeric(odata$mutant.reduction)+as.numeric(odata$sd.reduction)
o.CI.dn = as.numeric(odata$mutant.reduction)-as.numeric(odata$sd.reduction)
r.CI.up = as.numeric(rdata$mutant.reduction)+as.numeric(rdata$sd.reduction)
r.CI.dn = as.numeric(rdata$mutant.reduction)-as.numeric(rdata$sd.reduction)
plot(odata$mutant.reduction~odata$s.power,xaxt='n', cex=1.5,ylim=c(0,100), xlab='Power',ylab='Reduction', main='Class: Mutant Reduction vs Power',col='blue',pch=16)
axis(1, at=x, labels=names)
arrows(x,o.CI.dn,x,o.CI.up,code=3,length=0.2,angle=90,col='blue')
points(rdata$mutant.reduction~rdata$s.power,xaxt='n', cex=1.5,ylim=c(0,100), xlab='Power',ylab='Reduction', main='Class: Mutant Reduction vs Power',col='red',pch=16)
arrows(x,r.CI.dn,x,r.CI.up,code=3,length=0.2,angle=90,col='red')
#legend("bottomleft",paste(names,": S.E=",data$se),ncol=6,text.width=5)
@
\label{fig:sel}
\end{figure*}[t]

<<>>=
odata <- subset(stats.df, s.element=='method' & strategy=='xpercentperunit' & kind=='original')
rdata <- subset(stats.df, s.element=='method' & strategy=='xpercentperunit' & kind=='randoop')
odata$s.power
odata$mutant.reduction
@
\subsubsection{x\% selection}
\begin{figure*}[t]
<<x.per.sel.method,fig.width=5, fig.height=5, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
names=odata$s.power
x = (1:nrow(odata))
o.CI.up = as.numeric(odata$mutant.reduction)+as.numeric(odata$sd.reduction)
o.CI.dn = as.numeric(odata$mutant.reduction)-as.numeric(odata$sd.reduction)
r.CI.up = as.numeric(rdata$mutant.reduction)+as.numeric(rdata$sd.reduction)
r.CI.dn = as.numeric(rdata$mutant.reduction)-as.numeric(rdata$sd.reduction)
plot(odata$mutant.reduction~odata$s.power,xaxt='n', cex=1.5,ylim=c(0,400), xlab='Power',ylab='Reduction', main='Method: Mutant Reduction vs Power',col='blue',pch=16)
axis(1, at=x, labels=names)
arrows(x,o.CI.dn,x,o.CI.up,code=3,length=0.2,angle=90,col='blue')
points(rdata$mutant.reduction~rdata$s.power,xaxt='n', cex=1.5,ylim=c(0,400), xlab='Power',ylab='Reduction', main='Method: Mutant Reduction vs Power',col='red',pch=16)
arrows(x,r.CI.dn,x,r.CI.up,code=3,length=0.2,angle=90,col='red')
#legend("bottomleft",paste(names,": S.E=",data$se),ncol=6,text.width=5)
@
\label{fig:sel}
\end{figure*}[t]


<<>>=
odata <- subset(stats.df, s.element=='line' & strategy=='xpercentperunit' & kind=='original')
rdata <- subset(stats.df, s.element=='line' & strategy=='xpercentperunit' & kind=='randoop')
odata$s.power
odata$mutant.reduction
@
\subsubsection{x\% selection}
\begin{figure*}[t]
<<x.per.sel.line,fig.width=5, fig.height=5, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
names=odata$s.power
x = (1:nrow(odata))
o.CI.up = as.numeric(odata$mutant.reduction)+as.numeric(odata$sd.reduction)
o.CI.dn = as.numeric(odata$mutant.reduction)-as.numeric(odata$sd.reduction)
r.CI.up = as.numeric(rdata$mutant.reduction)+as.numeric(rdata$sd.reduction)
r.CI.dn = as.numeric(rdata$mutant.reduction)-as.numeric(rdata$sd.reduction)
plot(odata$mutant.reduction~odata$s.power,xaxt='n', cex=1.5,ylim=c(0,20000), xlab='Power',ylab='Reduction', main='Line: Mutant Reduction vs Power',col='blue',pch=16)
axis(1, at=x, labels=names)
arrows(x,o.CI.dn,x,o.CI.up,code=3,length=0.2,angle=90,col='blue')
points(rdata$mutant.reduction~rdata$s.power,xaxt='n', cex=1.5,ylim=c(0,20000), xlab='Power',ylab='Reduction', main='Line: Mutant Reduction vs Power',col='red',pch=16)
arrows(x,r.CI.dn,x,r.CI.up,code=3,length=0.2,angle=90,col='red')
#legend("bottomleft",paste(names,": S.E=",data$se),ncol=6,text.width=5)
@
\label{fig:sel}
\end{figure*}[t]


<<>>=
odata <- subset(stats.df, s.element=='line' & strategy=='xpercentperunit' & kind=='original')
rdata <- subset(stats.df, s.element=='line' & strategy=='xpercentperunit' & kind=='randoop')
odata$s.power
odata$mutant.reduction
@
\subsubsection{x\% selection}
\begin{figure*}[t]
<<x.per.sel.line.2,fig.width=5, fig.height=5, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
names=odata$s.power
x = (1:nrow(odata))
o.CI.up = as.numeric(odata$mutant.reduction)+as.numeric(odata$sd.reduction)
o.CI.dn = as.numeric(odata$mutant.reduction)-as.numeric(odata$sd.reduction)
r.CI.up = as.numeric(rdata$mutant.reduction)+as.numeric(rdata$sd.reduction)
r.CI.dn = as.numeric(rdata$mutant.reduction)-as.numeric(rdata$sd.reduction)
plot(odata$mutant.reduction~odata$s.power,xaxt='n', cex=1.5,ylim=c(0,100), xlab='Power',ylab='Reduction', main='Line: Mutant Reduction vs Power',col='blue',pch=16)
axis(1, at=x, labels=names)
arrows(x,o.CI.dn,x,o.CI.up,code=3,length=0.2,angle=90,col='blue')
points(rdata$mutant.reduction~rdata$s.power,xaxt='n', cex=1.5,ylim=c(0,100), xlab='Power',ylab='Reduction', main='Line: Mutant Reduction vs Power',col='red',pch=16)
arrows(x,r.CI.dn,x,r.CI.up,code=3,length=0.2,angle=90,col='red')
#legend("bottomleft",paste(names,": S.E=",data$se),ncol=6,text.width=5)
@
\label{fig:sel}
\end{figure*}[t]

<<>>=
odata <- subset(stats.df, s.element=='class' & strategy=='xceilperunit' & kind=='original')
rdata <- subset(stats.df, s.element=='class' & strategy=='xceilperunit' & kind=='randoop')
@
\subsubsection{x\% selection}
\begin{figure*}[t]
<<x.per.sel.class.3,fig.width=5, fig.height=5, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
names=odata$s.power
x = (1:nrow(odata))
o.CI.up = as.numeric(odata$mutant.reduction)+as.numeric(odata$sd.reduction)
o.CI.dn = as.numeric(odata$mutant.reduction)-as.numeric(odata$sd.reduction)
r.CI.up = as.numeric(rdata$mutant.reduction)+as.numeric(rdata$sd.reduction)
r.CI.dn = as.numeric(rdata$mutant.reduction)-as.numeric(rdata$sd.reduction)
plot(odata$mutant.reduction~odata$s.power,xaxt='n', cex=1.5,ylim=c(0,10), xlab='Power',ylab='Reduction', main='Ceil:Class: Mutant Reduction vs Power',col='blue',pch=16)
axis(1, at=x, labels=names)
arrows(x,o.CI.dn,x,o.CI.up,code=3,length=0.2,angle=90,col='blue')
points(rdata$mutant.reduction~rdata$s.power,xaxt='n', cex=1.5,ylim=c(0,10), xlab='Power',ylab='Reduction', main='Ceil:Class: Mutant Reduction vs Power',col='red',pch=16)
arrows(x,r.CI.dn,x,r.CI.up,code=3,length=0.2,angle=90,col='red')
#legend("bottomleft",paste(names,": S.E=",data$se),ncol=6,text.width=5)
@
\label{fig:sel}
\end{figure*}[t]



<<>>=
odata <- subset(stats.df, s.element=='line' & strategy=='xceilperunit' & kind=='original')
rdata <- subset(stats.df, s.element=='line' & strategy=='xceilperunit' & kind=='randoop')
@
\subsubsection{x\% selection}
\begin{figure*}[t]
<<x.per.sel.line.3,fig.width=5, fig.height=5, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
names=odata$s.power
x = (1:nrow(odata))
o.CI.up = as.numeric(odata$mutant.reduction)+as.numeric(odata$sd.reduction)
o.CI.dn = as.numeric(odata$mutant.reduction)-as.numeric(odata$sd.reduction)
r.CI.up = as.numeric(rdata$mutant.reduction)+as.numeric(rdata$sd.reduction)
r.CI.dn = as.numeric(rdata$mutant.reduction)-as.numeric(rdata$sd.reduction)
plot(odata$mutant.reduction~odata$s.power,xaxt='n', cex=1.5,ylim=c(0,10), xlab='Power',ylab='Reduction', main='Ceil:Line: Mutant Reduction vs Power',col='blue',pch=16)
axis(1, at=x, labels=names)
arrows(x,o.CI.dn,x,o.CI.up,code=3,length=0.2,angle=90,col='blue')
points(rdata$mutant.reduction~rdata$s.power,xaxt='n', cex=1.5,ylim=c(0,10), xlab='Power',ylab='Reduction', main='Ceil:Line: Mutant Reduction vs Power',col='red',pch=16)
arrows(x,r.CI.dn,x,r.CI.up,code=3,length=0.2,angle=90,col='red')
#legend("bottomleft",paste(names,": S.E=",data$se),ncol=6,text.width=5)
@
\label{fig:sel}
\end{figure*}[t]

<<>>=
odata <- subset(stats.df, s.element=='project' & strategy=='xprobperunit' & kind=='original')
rdata <- subset(stats.df, s.element=='project' & strategy=='xprobperunit' & kind=='randoop')
@
\subsubsection{x\% selection}
\begin{figure*}[t]
<<x.per.sel.line.4,fig.width=5, fig.height=5, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
names=odata$s.power
x = c(2:6)
o.CI.up = as.numeric(odata$mutant.reduction)+as.numeric(odata$sd.reduction)
o.CI.dn = as.numeric(odata$mutant.reduction)-as.numeric(odata$sd.reduction)
r.CI.up = as.numeric(rdata$mutant.reduction)+as.numeric(rdata$sd.reduction)
r.CI.dn = as.numeric(rdata$mutant.reduction)-as.numeric(rdata$sd.reduction)
plot(odata$mutant.reduction~odata$s.power,xaxt='n', cex=1.5,ylim=c(0,100), xlab='Power',ylab='Reduction', main='Prob:Project: Mutant Reduction vs Power',col='blue',pch=16)
axis(1, at=x, labels=names)
arrows(x,o.CI.dn,x,o.CI.up,code=3,length=0.2,angle=90,col='blue')
points(rdata$mutant.reduction~rdata$s.power,xaxt='n', cex=1.5,ylim=c(0,100), xlab='Power',ylab='Reduction', main='Prob:Project: Mutant Reduction vs Power',col='red',pch=16)
arrows(x,r.CI.dn,x,r.CI.up,code=3,length=0.2,angle=90,col='red')
#legend("bottomleft",paste(names,": S.E=",data$se),ncol=6,text.width=5)
@
\label{fig:sel}
\end{figure*}[t]





\subsection{SDL vs Random selection}
\begin{figure*}[t]
<<sdl.1,fig.width=10, fig.height=10, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
par(mfrow=c(2,2))
with(o.pit.all, plot(all.cov~TSDL.cov, pch='+', main='Original SDL'))
with(o.pit.all, plot(all.cov~l.1x1_per_line.cov, pch='+', main='Original 1 per line'))
with(r.pit.all, plot(all.cov~TSDL.cov, pch='+', main='Randoop SDl'))
with(r.pit.all, plot(all.cov~l.1x1_per_line.cov, pch='+', main='Randoop 1 per line'))
@
\label{fig:sdl1}
\caption{Statement Deletion vs One per line.}
\end{figure*}
<<results='asis'>>=
oprand <- subset(stats.df,!grepl('^..op', rownames(stats.df)))

oprand.x <- subset(oprand,grepl('^.1x[0-9]+_per_', operator))
oprand.l <- subset(oprand,!grepl('^.1x[0-9]+_per_', operator))
@

\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
o <- subset(oprand.x, kind == 'original')
o.x <- subset(o, select=c('operator', 'r.square', 'mutant.reduction', 'sd.reduction', 'sample', 'score.multiplier'))
colnames(o.x) <- c('operator', 'r^2', 'm.red', 'm.sd', 'num', 'B*')
print(xtable(o.x, caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE, size='\\small')
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
r <- subset(oprand.x, kind == 'randoop')
r.x <- subset(r, select=c('operator','r.square', 'mutant.reduction', 'sd.reduction', 'sample', 'score.multiplier'))
colnames(r.x) <- c('operator', 'r^2', 'm.red','m.sd', 'num', 'B*')
print(xtable(r.x, caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\end{table*}

\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
o <- subset(oprand.l, kind == 'original')
o.x <- subset(o, select=c('operator', 'r.square', 'mutant.reduction', 'sd.reduction', 'sample', 'score.multiplier'))
colnames(o.x) <- c('operator', 'r^2', 'm.red', 'm.sd', 'num', 'B*')
print(xtable(o.x, caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE,size='\\small')
# , sanitize.text.function = function(x){x}, include.rownames=FALSE)
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
r <- subset(oprand.l, kind == 'randoop')
r.x <- subset(r, select=c('operator','r.square', 'mutant.reduction', 'sd.reduction', 'sample', 'score.multiplier'))
colnames(r.x) <- c('operator', 'r^2', 'm.red','m.sd', 'num', 'B*')
print(xtable(r.x, caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\end{table*}


\begin{table*}
\begin{minipage}[h]{0.49\linewidth}

<<results='asis'>>=
opsel <- subset(stats.df,grepl('^..op', rownames(stats.df)))

o <- subset(opsel, kind == 'original')
o.x <- subset(o, select=c('operator', 'r.square', 'mutant.reduction', 'sd.reduction', 'sample', 'score.multiplier'))
colnames(o.x) <- c('operator', 'r^2', 'm.red', 'm.sd', 'num', 'B*')
print(xtable(o.x, caption='Original', label='table:selo'), include.rownames=FALSE, floating=FALSE,size='\\small')
# , sanitize.text.function = function(x){x}, include.rownames=FALSE)
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}

<<results='asis'>>=
r <- subset(opsel, kind == 'randoop')
r.x <- subset(r, select=c('operator','r.square', 'mutant.reduction', 'sd.reduction', 'sample', 'score.multiplier'))
colnames(r.x) <- c('operator', 'r^2', 'm.red','m.sd', 'num', 'B*')
print(xtable(r.x, caption='Randoop', label='table:selr'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\end{table*}




\subsection{Correlation Analysis}

$ \mu\{ M_{all}| M_{sample} \} = 0 + \beta_1 \times M{sample}  $

The interesting part is (1) the $\beta_1$ coefficient which tells how much we must multiply the  sampled/selected score to get original score, and $R^2$ which tells us how close the score is.

\subsubsection{sdl.mut.avg and mut.avg}

% <<>>=
% c <- cor(subset(m, select=c(sdl.mut.avg, mut.avg)) , method="kendall", use="pairwise")['sdl.mut.avg', 'mut.avg']
% d <- cor(subset(m, select=c(lrnd.mut.avg, mut.avg)) , method="kendall", use="pairwise")['lrnd.mut.avg', 'mut.avg']
% @
$ \mu_\{M_{all} | M_{sdl}\} = Sexpr{sdl.est} \times M_{sdl} \text{ : } R^2 = Sexpr{sdl.r} \text{,} \tau_{\beta} = Sexpr{c}$

\subsubsection{lrnd.mut.avg and mut.avg}

$ \mu_\{M_{all} | M_{rnd}\} = Sexpr{rnd.est} \times M_{rnd} \text{ : } R^2 = Sexpr{rnd.r} \text{,} \tau_{\beta} = Sexpr{d}$

\subsection{Regression Analysis}
The next question we will tackle is if there exist a difference at all between SDL mutagen and the random sampling. We can perform two statistical tests to answer this question. For the first, we run a simple paired t-test.

%<<>>=
%s <- t.test(lrnd.mut.avg, sdl.mut.avg, paired=T)
%@

The paired t-test failed to sufficient difference between the two distributions with a two-sided p-value of Sexpr{s.p.value}. That is, we do not have sufficient evidence to conclude that the two distributions are different.

The second approch is convoluted (I am a little unclear here.). We try to predict the original mutation score using the mutation score from both sdl and random sampling.
Our full model is

$ \mu_\{M_{all} | M_{sdl}, M_{rnd}\} = 0 + \beta_1 {sdl} + \beta_2 M_{rnd} + \beta_3 M_{sdl} M_{rnd}  $
\begin{small}
% <<results='asis'>>=
% s <- subset(m, select=c(mut.avg,sdl.mut.avg))
% s$type <- 'sdl'
% colnames(s) <- c('mut', 'sample', 'type')
% r <- subset(m, select=c(mut.avg,lrnd.mut.avg))
% r$type <- 'rnd'
% colnames(r) <- c('mut', 'sample', 'type')
% all <- rbind(s, r)
% fm <- with(all, lm(mut ~ sample + type + sample:type))
% sm <- anova(fm)
% print(xtable(sm,caption="My caption"), size="\\small")
% @
\end{small}

We see that both type and sample:type are non-significant for predicting the final model, and sequentially removing them does not change the effectiveness. Hence, the techniques random sampling and statement deletion operator do not have any difference.

\begin{figure*}[t]
% <<tplots, fig.width=5, fig.height=5, out.width='.45\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
% t_f <- sdl.time~lrnd.time
% plot(t_f, main='SDL ~ RND',pch='*')
% abline(lm(t_f), col='red')
% detach(m)
% @
\caption{Time}
\label{fig:caddrm}
\end{figure*}

\begin{figure*}[t]
\includegraphics[totalheight=6cm]{fig/original.pdf}
\caption{Subsumption Original}
\label{fig:subsumptiono}
\end{figure*}[t]

\begin{figure*}[t]
\includegraphics[totalheight=6cm]{fig/randoop.pdf}
\caption{Subsumption Randoop}
\label{fig:subsumptionr}
\end{figure*}[t]
%% END HERE
\fi
