<<t.tests,child='ttests.Rnw'>>=
@
<<tblsingles, child='tables.Rnw'>>=
@

\section{Analysis}
\label{sec:analysis}
For the purpose of comparing different mutation reduction strategies, we
computed the average \textit{test utility}, and \textit{assert utility} of
different strategies.

We use the mutant reduction strategy to select a subset
of mutants from the original set. We then collect all test cases that were
able to kill any of the selected set of mutants. Next we compute the
non-redundant test cases by discarding any test case that can be removed
without letting any of the mutants escape. This is repeated and averaged
over multiple runs, and the average number of non-redundant test cases are
found.

While computing the test cases, we also collect assertion information each
test case has. We compute this as the number of asserts in the test case
incremented by one to account for test cases without any asserts. Thus we
compute both the assertions from non-redundant test cases for the mutant
selection, and also the assertions for the full set of killing test cases
for the mutant selection.

Say the original set of mutants is given my $M$, then the reduced set of
mutants is given by $M_{strategy}$. The strategy choses $|M_{strategy}|$
mutants on its application. Test suite composed of test cases that
are able to kill any of the mutants of $M_{strategy}$ is given by
$T_{strategy}$. The total number of asserts on tests under $T_{strategy}$
is given by $asserts(T_{strategy})$. We find a minimal test suite that
is capable of killing all mutants under $M_{strategy}$ by a greedy strategy
of iteratively choosing the test cases with the largest amount of kills
for remaining mutants, and is given by $min(T_{strategy})$. Similarly,
for baseline, we use a strategy of randomly choosing the mutants from the
original set with number of mutants chosen same as the corresponding
number of mutants that the strategy under consideration chose.
That is, $|M_{strategy}| = |M_{random}|$. Given any set of tests $T$,
the total number of mutants that can be killed by the test cases in $T$
is given by $k(T)$, and those mutants that are covered by the test cases
are given by $c(T)$.

The \textit{test utility} is computed as the difference between the number
of non-redundant test cases the mutant selection achieved and the number of
non-redundant test cases of a random sample of same number of mutants.
The result is reported as a percentage of the non-redundant tests of the random
sample which is taken as the baseline. That is, test utility is given by
$\left(\frac{|min(T_{strategy})|}{|min(T_{random})|}-1\right)\times 100.0$

Similarly \textit{assert utility} of a strategy is computed as the difference
between the number of assertions of non-redundant test cases the mutant
selection achieved and the number of assertions the test cases for random
sample of same number of mutants. As before, it is reported as a percentage of
the asserts of the non-redundant tests of the random sample which is taken
as the baseline. It is given by
$\left(\frac{|asserts(min(T_{strategy}))|}{|asserts(min(T_{random}))|}-1\right)\times 100.0$

\textit{Baseline effectiveness} is computed by getting the number
of mutants selected by the strategy, and selecting the same number of mutants
randomly, collecting the test cases that kill any of these mutants, and
applying the same test cases against the original set of mutants. The result
is then divided by the original number of detected mutants. It is given by
$\frac{|k(T_{random})|}{|k(M)|}\times 100.0$.

\textit{Strategy effectiveness} is computed by collecting all the test cases
that detected any of the mutants in the selected subset, and applying these
test cases to the complete set of mutants. The mutation score thus obtained
is then divided by the original number of detected mutants.
This is reported as difference from the corresponding baseline effectiveness,
given by 
$\frac{|k(T_{strategy})| - |k(T_{random})|}{|k(M)|}\times100.0$.


\begin{figure*}
<<mutantdet, child='fig.mutantdist.Rnw'>>=
@
\caption{The relative contribution of mutation operators in terms of fraction of mutants produced and detected.}
\end{figure*}

\begin{figure*}
<<testdet, child='fig.testdist.Rnw'>>=
@
\caption{The relative contribution of mutation operators in terms of fraction of tests killed and covered.}
\end{figure*}

\subsection{Statistical tests}
To compute the actual advantage gained by each of the different strategies, we
calculated the paired t-test between the number of test cases reported by the
strategy, and that of random selection of the same number of operators as
baseline, that is 
\[T.test\left(T_{strategy}\sim{}T_{random}\right)\]

We also calculated the paired t-test between the number of mutants from the
full set which were killed by the test cases killing any of the mutants from
the selected mutants by mutation reduction strategy. That is
\[T.test\left(k(T_{strategy})\sim{}k(T_{random})\right)\]

\begin{table*}[!ht]
<<tblttest, child='tbl.ttests.Rnw'>>=
@
%\caption*{Single Operators}
\caption {The t-test results}
\label{tbl:ttests}
\end{table*}

