<<xpercentunit>>=
sel.colnames <- c('operator', 'r.square', 'mutant.reduction', 'sd.reduction', 'sample', 'score.multiplier')
new.colnames <- c('operator', 'r^2',      'm.red',            'm.sd',         'num',    'B*')
stats.xp <- subset(stats.df, grepl('^(r|rr|rc)[.]', operator)) # We are ignoring ceil here. add rc if needed.

o.stats.sel.xp <- subset(o.f(stats.xp), select=sel.colnames)
r.stats.sel.xp <- subset(r.f(stats.xp), select=sel.colnames)
stats.rest <- subset(stats.df, !grepl('^(r|rr|rc)[.]', operator))
colnames(o.stats.sel.xp) <- new.colnames
colnames(r.stats.sel.xp) <- new.colnames
o.stats.sel.xp$scope <- NA
r.stats.sel.xp$scope <- NA
o.stats.sel.xp$sampling <- NA
r.stats.sel.xp$sampling <- NA

f <- function(x) {
  x <- x[,c(7,8,2,3,4,5,6)]
  return(x)
}

o.stats.sel.xp.sample <- subset(o.stats.sel.xp, grepl('^rr[.]', operator))
r.stats.sel.xp.sample <- subset(r.stats.sel.xp, grepl('^rr[.]', operator))

o.stats.sel.xp.sample$operator <- gsub('rr[.]1x','1/', o.stats.sel.xp.sample$operator)
o.stats.sel.xp.sample$scope <- gsub('.*_','', o.stats.sel.xp.sample$operator)
o.stats.sel.xp.sample$sampling <- gsub('_.*','', o.stats.sel.xp.sample$operator)
r.stats.sel.xp.sample$operator  <- gsub('rr[.]1x','1/', r.stats.sel.xp.sample$operator)
r.stats.sel.xp.sample$scope <- gsub('.*_','', r.stats.sel.xp.sample$operator)
r.stats.sel.xp.sample$sampling <- gsub('_.*','', r.stats.sel.xp.sample$operator)

o.stats.sel.xp.round <- subset(o.stats.sel.xp, grepl('^r[.]', operator))
r.stats.sel.xp.round <- subset(r.stats.sel.xp, grepl('^r[.]', operator))

o.stats.sel.xp.round$operator  <- gsub('r[.]1x','1/', o.stats.sel.xp.round$operator)
o.stats.sel.xp.round$scope  <- gsub('.*_','', o.stats.sel.xp.round$operator)
o.stats.sel.xp.round$sampling  <- gsub('_.*','', o.stats.sel.xp.round$operator)
r.stats.sel.xp.round$operator  <- gsub('r[.]1x','1/', r.stats.sel.xp.round$operator)
r.stats.sel.xp.round$scope  <- gsub('.*_','', r.stats.sel.xp.round$operator)
r.stats.sel.xp.round$sampling  <- gsub('_.*','', r.stats.sel.xp.round$operator)

o.stats.sel.xp.ceil <- subset(o.stats.sel.xp, grepl('^rc[.]', operator))
r.stats.sel.xp.ceil <- subset(r.stats.sel.xp, grepl('^rc[.]', operator))

o.stats.sel.xp.ceil$operator  <- gsub('rc[.]1x','1/', o.stats.sel.xp.ceil$operator)
o.stats.sel.xp.ceil$scope  <- gsub('.*_','', o.stats.sel.xp.ceil$operator)
o.stats.sel.xp.ceil$sampling  <- gsub('_.*','', o.stats.sel.xp.ceil$operator)
r.stats.sel.xp.ceil$operator  <- gsub('rc[.]1x','1/', r.stats.sel.xp.ceil$operator)
r.stats.sel.xp.ceil$scope  <- gsub('.*_','', r.stats.sel.xp.ceil$operator)
r.stats.sel.xp.ceil$sampling  <- gsub('_.*','', r.stats.sel.xp.ceil$operator)

@
\subsubsection{x\% selection}
\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(f(o.stats.sel.xp.sample), caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE, size='\\small')
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(f(r.stats.sel.xp.sample), caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\bigskip
\caption {The sample(x)\% random selection criteria results.}
\label{tbl:xselsample}
\end{table*}

\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(f(o.stats.sel.xp.round), caption='Original', label='table:rando', main='Original'), include.rownames=FALSE, floating=FALSE, size='\\small')
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(f(r.stats.sel.xp.round), caption='Randoop', label='table:randr', main='Randoop'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\bigskip
\caption {The round(x)\% random selection criteria results.}
\label{tbl:xselround}
\end{table*}

\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(f(o.stats.sel.xp.ceil), caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE, size='\\small')
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(f(r.stats.sel.xp.ceil), caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\bigskip
\caption {The ceil(x)\% random selection criteria results.}
\label{tbl:xselceil}
\end{table*}


\section{Analysis}
\label{sec:analysis}
For the purposes of comparing between the criterias, we computed the
correlation between sampled mutation score and full mutation score.
Since for most of the sampling criteria, if there are no mutants to
sample, it probably means there are no mutants generated on the whole,
we used $lm(M_{all}~0+M_{sample})$ as the regression formula, and report
the correlation from this linear regression. We also report the expected
multiplier factor for the sampled mutation score. This factor determines
the ease of satisfying the sampling criteria. That is, if the multiplier
factor is small, then it is easier to satisfy compared to a larger multiplier
factor.
Next, for each criteria, we computed the reduction of mutants given by the
ratio between total number of mutants and sampled mutants.
We also compute standard deviation of the mutant reduction, which determines
the consistency of results. (A large amount of standard deviation suggests
that the mutant reduction ratio achieved is very much dependent on the
project. So as a heuristic, we suggest looking at only those projects which
has a mean reduction ratio atleast twice the standard deviation.)

For some of the smaller projects, some of the sampling criteria did not
return any results. This is also collected in our tables.

%\subsection{Sampling Criteria}


\begin{figure*}[t]
<<x.per.sel.round,fig.width=10, fig.height=10, out.width='.95\\linewidth', out.heigth='8in', echo=F, message=F, warn=F,fig.lp="fig:">>=
theme_set(theme_bw(12))
myopts <- theme(panel.background = element_blank())
o.xp <- subset(o.processed, grepl('^r[.].*.m[.]red',ind))
ggplot(subset(o.xp, values < 100), aes(power, values, fill=interaction(type,power), dodge=type)) +
  stat_boxplot(geom ='errorbar')+
  geom_boxplot() + facet_wrap(~type)+ myopts
@
\caption{The effect of round(x) reduction, Except for line sampling of power $5$ and $6$ all others are above 0.90 $R^2$.}
\label{fig:xroundsel}
\end{figure*}

\begin{figure*}[t]
<<x.per.sel.sample,fig.width=10, fig.height=10, out.width='.95\\linewidth', out.heigth='8in', echo=F, message=F, warn=F,fig.lp="fig:">>=
o.xp <- subset(o.processed, grepl('^rr[.].*.m[.]red',ind))
ggplot(subset(o.xp, values < 100), aes(power, values, fill=interaction(type,power), dodge=type)) +
  stat_boxplot(geom ='errorbar')+
  geom_boxplot() + facet_wrap(~type) + myopts
@
\caption{The effect of sample(x) reduction. All are above 0.90 $R^2$.}
\label{fig:xsamplesel}
\end{figure*}
%Our experiments found that while $round(x)$ and $sample(x)$ produced relatively reasonable reduction of mutants, the $ceil(x)$ criteria failed to produce a reasonable reduction of mutants except for higher power where the reduction was some what close to that produced by $round(x)$ and $sample(x)$ (which was expected). The $R^2$ values of $ceil(x)$ were almost always lower than that produced by $round(x)$ and $sample(x)$ for similar reduction of mutants. For this reason, we do not consider this function again. However, interested parties can refer to our published data.
% ----------------------------------------------------------------------

%\subsubsection{Lines per element}
%The aim of this criteria is similar in some sense to selective mutation. While n-selective mutation ignores the most numerous mutant species, this criteria seeks to deprioritize the most complex program elements.

<<count>>=
stats.loc <- subset(stats.rest, grepl('^l[.]', operator))
o.stats.sel.loc <- subset(o.f(stats.loc), select=sel.colnames)
r.stats.sel.loc <- subset(r.f(stats.loc), select=sel.colnames)
stats.rest <- subset(stats.rest, !grepl('^l[.]', operator))
colnames(o.stats.sel.loc) <- new.colnames
colnames(r.stats.sel.loc) <- new.colnames

o.stats.sel.loc$operator  <- gsub('l[.]1x','1/', o.stats.sel.loc$operator)
o.stats.sel.loc$scope  <- gsub('.*_','', o.stats.sel.loc$operator)
o.stats.sel.loc$sampling  <- gsub('_.*','', o.stats.sel.loc$operator)
r.stats.sel.loc$operator  <- gsub('l[.]1x','1/', r.stats.sel.loc$operator)
r.stats.sel.loc$scope  <- gsub('.*_','', r.stats.sel.loc$operator)
r.stats.sel.loc$sampling  <- gsub('_.*','', r.stats.sel.loc$operator)

stats.loc.w <- subset(stats.rest, grepl('^wl[.]', operator))
o.stats.sel.loc.w <- subset(o.f(stats.loc.w), select=sel.colnames)
r.stats.sel.loc.w <- subset(r.f(stats.loc.w), select=sel.colnames)
stats.rest <- subset(stats.rest, !grepl('^wl[.]', operator))
colnames(o.stats.sel.loc.w) <- new.colnames
colnames(r.stats.sel.loc.w) <- new.colnames

o.stats.sel.loc.w$operator  <- gsub('wl[.]1x','1/', o.stats.sel.loc.w$operator)
o.stats.sel.loc.w$scope  <- gsub('.*_','', o.stats.sel.loc.w$operator)
o.stats.sel.loc.w$sampling  <- gsub('_.*','', o.stats.sel.loc.w$operator)
r.stats.sel.loc.w$operator  <- gsub('wl[.]1x','1/', r.stats.sel.loc.w$operator)
r.stats.sel.loc.w$scope  <- gsub('.*_','', r.stats.sel.loc.w$operator)
r.stats.sel.loc.w$sampling  <- gsub('_.*','', r.stats.sel.loc.w$operator)

@
\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(f(o.stats.sel.loc), caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE, size='\\small')
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(f(r.stats.sel.loc), caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\caption {The line count selection criteria results.}
\label{tbl:locsel}
\end{table*}

\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(f(o.stats.sel.loc.w), caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE, size='\\small')
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(f(r.stats.sel.loc.w), caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\caption {The line count selection criteria results (within).}
\label{tbl:locsel}
\end{table*}


\begin{figure*}[t]
<<loc.per.sel.sample,fig.width=10, fig.height=10, out.width='.95\\linewidth', out.heigth='8in', echo=F, message=F, warn=F,fig.lp="fig:">>=
o.loc <- subset(o.processed, grepl('^l[.].*.m[.]red',ind))
ggplot(subset(o.loc, values < 100), aes(power, values, fill=interaction(type,power), dodge=type)) +
  stat_boxplot(geom ='errorbar')+
  geom_boxplot() + facet_wrap(~type) + myopts
@
\caption{The effect of loc (external) reduction. All are above 0.98 $R^2$.}
\label{fig:locsel}
\end{figure*}

\begin{figure*}[t]
<<wloc.per.sel.sample,fig.width=10, fig.height=10, out.width='.95\\linewidth', out.heigth='8in', echo=F, message=F, warn=F,fig.lp="fig:">>=
o.loc <- subset(o.processed, grepl('^wl[.].*.m[.]red',ind))
ggplot(subset(o.loc, values < 100), aes(power, values, fill=interaction(type,power), dodge=type)) +
  stat_boxplot(geom ='errorbar')+
  geom_boxplot() + facet_wrap(~type) + myopts
@
\caption{The effect of loc (internal) reduction. All are above 0.90 $R^2$.}
\label{fig:wlocsel}
\end{figure*}


%The results of this selection criteria are provided in Table~\ref{tbl:locsel}. The effect of random selection within the program elements are visualized in Figure~\ref{fig:wlocsel}, and when it is made external to the program elements is visualized in Figure~\ref{fig:wlocsel}.

% ----------------------------------------------------------------------
%\subsubsection{One per element}
%The aim of this criteria is is to take the previous idea to the extreme. We choose only a single mutant per program element.

<<one>>=
stats.one <- subset(stats.rest, grepl('^o[.]', operator))

o.stats.sel.one <- subset(o.f(stats.one), select=sel.colnames)
r.stats.sel.one <- subset(r.f(stats.one), select=sel.colnames)
stats.rest <- subset(stats.rest, !grepl('^o[.]', operator))
colnames(o.stats.sel.one) <- new.colnames
colnames(r.stats.sel.one) <- new.colnames
@
\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(o.stats.sel.one, caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE, size='\\small')
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(r.stats.sel.one, caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\bigskip
\caption {The one per element selection criteria results.}
\label{tbl:onesel}
\end{table*}

\begin{figure*}[t]
<<one.per.sel.sample,fig.width=10, fig.height=10, out.width='.95\\linewidth', out.heigth='8in', echo=F, message=F, warn=F,fig.lp="fig:">>=
o.one <- subset(o.processed, grepl('^o[.].*.m[.]red',ind))
ggplot(subset(o.one, values < 100 & (type=='line' | type=='method')), aes(power, values, fill=interaction(type,power), dodge=type)) +
  stat_boxplot(geom ='errorbar')+
  geom_boxplot() + facet_wrap(~type) + myopts
@
\caption{The effect of one element selection, All are above 0.98 $R^2$.}
\label{fig:onesel}
\end{figure*}

%The values are given in Table~\ref{tbl:onesel}, and its visaulization is in Figure~\ref{fig:onesel}.
% ----------------------------------------------------------------------
% <<oth>>=
% stats.o <- subset(stats.rest, !grepl('^op', operator))
% o.stats.sel.o <- subset(o.f(stats.o), select=sel.colnames)
% r.stats.sel.o <- subset(r.f(stats.o), select=sel.colnames)
% stats.rest <- subset(stats.rest, grepl('^op', operator))
% colnames(o.stats.sel.o) <- new.colnames
% colnames(r.stats.sel.o) <- new.colnames
% @
% 
% \begin{table*}
% \begin{minipage}[h]{0.49\linewidth}
% <<results='asis'>>=
% print(xtable(o.stats.sel.o, caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE, size='\\small')
% @
% \end{minipage}
% \hspace{0.5cm}
% \begin{minipage}[h]{0.49\linewidth}
% <<results='asis'>>=
% print(xtable(r.stats.sel.o, caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
% @
% \end{minipage}
% \bigskip
% \caption {Others}
% \label{tbl:osel}
% \end{table*}
% 
% ----------------------------------------------------------------------

%\subsection{Operator Selection}
\begin{figure*}[t]
<<op.all,fig.width=10, fig.height=5, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
#with(subset(stats.df,r.square > 0.9),plot(mutant.reduction, (1-r.square)*100, pch='*', col=as.factor(strategy)))
# "kind" "operator" "s.power" "s.element" "strategy" "mutant.reduction" "sd.reduction"
#  "sample" "r.square" "score.multiplier" "p.value"

df <-  subset(stats.df, r.square>=0.9 & (sd.reduction * 2) < mutant.reduction) # & mutant.reduction < 20)
df$sqr <- 1 - df$r.square
df$mult <- 1 - df$score.multiplier
df$type <- with(df, as.factor(
      ifelse(grepl('line',operator), 'line',
        ifelse(grepl('block',operator), 'block',
        ifelse(grepl('method',operator), 'method',
          ifelse(grepl('class',operator), 'class',
            ifelse(grepl('project',operator), 'project',
              'selection')))))))
df$strat <- with(df,
    ifelse(grepl('perunit', strategy), 'xpercent',
      ifelse(grepl('op',strategy), 'opsel',
        ifelse(grepl('one',strategy), 'oneperelm',
          ifelse(grepl('elem',strategy), 'loc', 'other'
            )))))
ggplot(df, aes(mutant.reduction, sd.reduction)) + geom_point(aes(size=sqr, color=type))
@
\caption{The mean reduction of mutants vs its standard deviation. The sqr represents (1-$R^2$), i.e smaller is good. Only those observations with $R^2 > 0.9$ and $2\times $ standard deviation > mean reduction is shown here. }
\label{fig:fullimgsize}
\end{figure*}
\begin{figure*}[t]
<<op.all.2,fig.width=10, fig.height=5, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
ggplot(df, aes(mutant.reduction, sd.reduction)) + geom_point(aes(shape=strat, color=type))
@
\caption{The mean reduction of mutants vs its standard deviation. Only those observations with $R^2 > 0.9$ and $2\times $ standard deviation > mean reduction is shown here. }
\end{figure*}

\begin{figure*}[t]
<<op.all.4,fig.width=10, fig.height=5, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
ggplot(df, aes(mutant.reduction, sd.reduction)) + geom_point(aes(shape=strat, color=mult))
@
\caption{The mean reduction of mutants vs its standard deviation. Only those observations with $R^2 > 0.9$ and $2\times $ standard deviation > mean reduction is shown here. The color represents the (1-multiplier) to the sampled mutation score to get final score }
\end{figure*}


\begin{figure*}[t]
<<op.all.3,fig.width=10, fig.height=5, out.width='.95\\linewidth', out.heigth='4in', echo=F, message=F, warn=F,fig.lp="fig:">>=
dfd <- subset(df, !(strategy %in% c('op','opsel')) )
ggplot(dfd, aes(sd.reduction, mutant.reduction)) + geom_point(aes(shape=type, color=sqr)) + facet_wrap(~strategy) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
@
\label{fig:fullimgshape}
\end{figure*}
<<opsel>>=
stats.op <- subset(stats.rest, grepl('^(op|TSDL)', operator))
o.stats.sel.op <- subset(o.f(stats.op), select=sel.colnames)
r.stats.sel.op <- subset(r.f(stats.op), select=sel.colnames)
stats.rest <- subset(stats.rest, !grepl('^(op|TSDL)', operator))
colnames(o.stats.sel.op) <- new.colnames
colnames(r.stats.sel.op) <- new.colnames
@

\begin{table*}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(o.stats.sel.op, caption='Original', label='table:rando'), include.rownames=FALSE, floating=FALSE, size='\\small')
@
\end{minipage}
\hspace{0.5cm}
\begin{minipage}[h]{0.49\linewidth}
<<results='asis'>>=
print(xtable(r.stats.sel.op, caption='Randoop', label='table:randr'), include.rownames=FALSE, floating=FALSE,size='\\small')
@
\end{minipage}
\bigskip
\caption {Operator Selection}
\label{tbl:opsel}
\end{table*}

%For operator selection, we approximated the operators as far as possible from the research works into the operators exposed by PIT. The results of this are provided in Table~\ref{tbl:opsel}.
% The subsumption graphs are provided in Figure~\ref{fig:subsumptiono}
% TODO : Check if this makes sense.
%\begin{figure*}[t]
%\includegraphics[totalheight=6cm]{fig/original.pdf}
%\caption{Subsumption Original}
%\label{fig:subsumptiono}
%\end{figure*}

%\begin{figure*}[t]
%\includegraphics[totalheight=6cm]{fig/randoop.pdf}
%\caption{Subsumption Randoop}
%\label{fig:subsumptionr}
%\end{figure*}[t]

% ----------------------------------------------------------------------
