% MAX LIMIT: 10 pages for all figurs and text + any number of references.
\newcommand*\per{\scalebox{.5}{\%}}
\newcommand\Mua{Mutation analysis~}
\newcommand\mua{mutation analysis~}
%\newcommand{\pitnvmc}{~NON\_\allowbreak{}VOID\_\allowbreak{}METHOD\_\allowbreak{}CALLS~}
%\newcommand{\pitnc}{~NEGATE\_\allowbreak{}CONDITIONALS~}
%\newcommand{\pitrc}{~REMOVE\_\allowbreak{}CONDITIONALS~}
%\newcommand{\pitdc}{~DELETE\_\allowbreak{}CONDITIONALS~}
%\newcommand{\pitrv}{~RETURN\_\allowbreak{}VALUES~}
%\newcommand{\pitic}{~INLINE\_\allowbreak{}CONSTANTS~}
%\newcommand{\pitcc}{~CONSTRUCTOR\_\allowbreak{}CALLS~}
%\newcommand{\pitemv}{~E\_\allowbreak{}MEMBER\_\allowbreak{}VARIABLE~}
%\newcommand{\pitvmc}{~VOID\_\allowbreak{}METHOD\_\allowbreak{}CALLS~}
%\newcommand{\pitm}{~MATH~}
%\newcommand{\pitcb}{~CONDITIONALS\_\allowbreak{}BOUNDARY~}
%\newcommand{\piti}{~INCREMENTS~}
%\newcommand{\pitri}{~REMOVE\_\allowbreak{}INCREMENTS~}
%\newcommand{\pitrs}{~RM\_\allowbreak{}SWITCH~}
%\newcommand{\pites}{~E\_\allowbreak{}SWITCH~}
%\newcommand{\pitin}{~INVERT\_\allowbreak{}NEGATIVES~}
%
\newcommand{\pitnvmc}{NMC~}
\newcommand{\pitnc}{NC~}
\newcommand{\pitrc}{RC~}
\newcommand{\pitdc}{DC~}
\newcommand{\pitrv}{RV~}
\newcommand{\pitic}{IC~}
\newcommand{\pitcc}{CC~}
\newcommand{\pitemv}{EMV~}
\newcommand{\pitvmc}{VMC~}
\newcommand{\pitm}{M~}
\newcommand{\pitcb}{CB~}
\newcommand{\piti}{I~}
\newcommand{\pitri}{RI~}
\newcommand{\pitrs}{RS~}
\newcommand{\pites}{ES~}
\newcommand{\pitin}{IN~}
% No space variants.
\newcommand{\Pitnvmc}{NMC}
\newcommand{\Pitnc}{NC}
\newcommand{\Pitrc}{RC}
\newcommand{\Pitdc}{DC}
\newcommand{\Pitrv}{RV}
\newcommand{\Pitic}{IC}
\newcommand{\Pitcc}{CC}
\newcommand{\Pitemv}{EMV}
\newcommand{\Pitvmc}{VMC}
\newcommand{\Pitm}{M}
\newcommand{\Pitcb}{CB}
\newcommand{\Piti}{I}
\newcommand{\Pitri}{RI}
\newcommand{\Pitrs}{RS}
\newcommand{\Pites}{ES}
\newcommand{\Pitin}{IN}


\begin{comment}
<<setup, include=FALSE, message=FALSE, echo=FALSE>>=
is.installed <- function(mypkg) is.element(mypkg, installed.packages()[,1])
#options(CRAN = "http://cran.stat.ucla.edu")
#if (!is.installed("xtable")) install.packages("xtable")
#if (!is.installed("ggplot2")) install.packages("ggplot2")
#if (!is.installed("reshape2")) install.packages("reshape2")

#options(warn=-1)
options(digits=3)
opts_chunk$set(fig.path='figure/twocolumn-', fig.align='center', fig.show='hold', echo=FALSE)
opts_chunk$set(cache=TRUE)
render_listings()
logit<-function(x) log(x/(1-x))
require(reshape2)
require(xtable)
require(ggplot2)
require(Mutsel)
@
<<chunk-hook, echo=2>>=
<<setup>>
v=data(package='Mutsel')
data(list = v$results[,3])
original.stats.df <- stats.df # save it
o.f <- function(x) subset(x, kind == 'original')
r.f <- function(x) subset(x, kind == 'randoop')
o.stats.df <- o.f(stats.df)
r.stats.df <- r.f(stats.df)
@
\end{comment}
<<>>=
theme_set(theme_bw(12))
myopts <- theme(panel.background = element_blank())

sel.colnames <- c('operator', 'r.square', 'mutant.reduction', 'sd.reduction', 'sample', 'score.multiplier')
new.colnames <- c('operator', '$R^2$',      '$\\mu_{red}$',            '$\\sigma_{red}$',         'valid',    '$\\beta_1$')
stats.xp <- subset(stats.df, grepl('^(r|rr|rc)[.]', operator)) # We are ignoring ceil here. add rc if needed.

o.stats.sel.xp <- subset(o.f(stats.xp), select=sel.colnames)
r.stats.sel.xp <- subset(r.f(stats.xp), select=sel.colnames)
stats.rest <- subset(stats.df, !grepl('^(r|rr|rc)[.]', operator))
colnames(o.stats.sel.xp) <- new.colnames
colnames(r.stats.sel.xp) <- new.colnames
o.stats.sel.xp$scope <- NA
r.stats.sel.xp$scope <- NA
o.stats.sel.xp$sampling <- NA
r.stats.sel.xp$sampling <- NA

f <- function(x) {
  x <- x[,c(7,8,2,3,4,5,6)]
  names(x)[names(x) == 'sampling'] <- '$\\ltimes$'
  return(x)
}

o.stats.sel.xp.sample <- subset(o.stats.sel.xp, grepl('^rr[.]', operator))
r.stats.sel.xp.sample <- subset(r.stats.sel.xp, grepl('^rr[.]', operator))

o.stats.sel.xp.sample$operator <- gsub('rr[.]1x','1/', o.stats.sel.xp.sample$operator)
o.stats.sel.xp.sample$scope <- gsub('.*_','', o.stats.sel.xp.sample$operator)
o.stats.sel.xp.sample$sampling <- gsub('_.*','', o.stats.sel.xp.sample$operator)
r.stats.sel.xp.sample$operator  <- gsub('rr[.]1x','1/', r.stats.sel.xp.sample$operator)
r.stats.sel.xp.sample$scope <- gsub('.*_','', r.stats.sel.xp.sample$operator)
r.stats.sel.xp.sample$sampling <- gsub('_.*','', r.stats.sel.xp.sample$operator)

o.stats.sel.xp.round <- subset(o.stats.sel.xp, grepl('^r[.]', operator))
r.stats.sel.xp.round <- subset(r.stats.sel.xp, grepl('^r[.]', operator))

o.stats.sel.xp.round$operator  <- gsub('r[.]1x','1/', o.stats.sel.xp.round$operator)
o.stats.sel.xp.round$scope  <- gsub('.*_','', o.stats.sel.xp.round$operator)
o.stats.sel.xp.round$sampling  <- gsub('_.*','', o.stats.sel.xp.round$operator)
r.stats.sel.xp.round$operator  <- gsub('r[.]1x','1/', r.stats.sel.xp.round$operator)
r.stats.sel.xp.round$scope  <- gsub('.*_','', r.stats.sel.xp.round$operator)
r.stats.sel.xp.round$sampling  <- gsub('_.*','', r.stats.sel.xp.round$operator)

o.stats.sel.xp.ceil <- subset(o.stats.sel.xp, grepl('^rc[.]', operator))
r.stats.sel.xp.ceil <- subset(r.stats.sel.xp, grepl('^rc[.]', operator))

o.stats.sel.xp.ceil$operator  <- gsub('rc[.]1x','1/', o.stats.sel.xp.ceil$operator)
o.stats.sel.xp.ceil$scope  <- gsub('.*_','', o.stats.sel.xp.ceil$operator)
o.stats.sel.xp.ceil$sampling  <- gsub('_.*','', o.stats.sel.xp.ceil$operator)
r.stats.sel.xp.ceil$operator  <- gsub('rc[.]1x','1/', r.stats.sel.xp.ceil$operator)
r.stats.sel.xp.ceil$scope  <- gsub('.*_','', r.stats.sel.xp.ceil$operator)
r.stats.sel.xp.ceil$sampling  <- gsub('_.*','', r.stats.sel.xp.ceil$operator)
# 1 done
stats.loc <- subset(stats.rest, grepl('^l[.]', operator))
o.stats.sel.loc <- subset(o.f(stats.loc), select=sel.colnames)
r.stats.sel.loc <- subset(r.f(stats.loc), select=sel.colnames)
stats.rest <- subset(stats.rest, !grepl('^l[.]', operator))
colnames(o.stats.sel.loc) <- new.colnames
colnames(r.stats.sel.loc) <- new.colnames

o.stats.sel.loc$operator  <- gsub('l[.]1x','1/', o.stats.sel.loc$operator)
o.stats.sel.loc$scope  <- gsub('.*_','', o.stats.sel.loc$operator)
o.stats.sel.loc$sampling  <- gsub('_.*','', o.stats.sel.loc$operator)
r.stats.sel.loc$operator  <- gsub('l[.]1x','1/', r.stats.sel.loc$operator)
r.stats.sel.loc$scope  <- gsub('.*_','', r.stats.sel.loc$operator)
r.stats.sel.loc$sampling  <- gsub('_.*','', r.stats.sel.loc$operator)

stats.loc.w <- subset(stats.rest, grepl('^wl[.]', operator))
o.stats.sel.loc.w <- subset(o.f(stats.loc.w), select=sel.colnames)
r.stats.sel.loc.w <- subset(r.f(stats.loc.w), select=sel.colnames)
stats.rest <- subset(stats.rest, !grepl('^wl[.]', operator))
colnames(o.stats.sel.loc.w) <- new.colnames
colnames(r.stats.sel.loc.w) <- new.colnames

o.stats.sel.loc.w$operator  <- gsub('wl[.]1x','1/', o.stats.sel.loc.w$operator)
o.stats.sel.loc.w$scope  <- gsub('.*_','', o.stats.sel.loc.w$operator)
o.stats.sel.loc.w$sampling  <- gsub('_.*','', o.stats.sel.loc.w$operator)
r.stats.sel.loc.w$operator  <- gsub('wl[.]1x','1/', r.stats.sel.loc.w$operator)
r.stats.sel.loc.w$scope  <- gsub('.*_','', r.stats.sel.loc.w$operator)
r.stats.sel.loc.w$sampling  <- gsub('_.*','', r.stats.sel.loc.w$operator)
# 2 done

stats.one <- subset(stats.rest, grepl('^o[.]', operator))

o.stats.sel.one <- subset(o.f(stats.one), select=sel.colnames)
r.stats.sel.one <- subset(r.f(stats.one), select=sel.colnames)
stats.rest <- subset(stats.rest, !grepl('^o[.]', operator))
colnames(o.stats.sel.one) <- new.colnames
colnames(r.stats.sel.one) <- new.colnames


o.stats.sel.one$operator  <- gsub('o[.]1x','1/', o.stats.sel.one$operator)
o.stats.sel.one$scope  <- gsub('.*_','', o.stats.sel.one$operator)
o.stats.sel.one$sampling  <- gsub('_.*','', o.stats.sel.one$operator)


r.stats.sel.one$operator  <- gsub('o[.]1x','1/', r.stats.sel.one$operator)
r.stats.sel.one$scope  <- gsub('.*_','', r.stats.sel.one$operator)
r.stats.sel.one$sampling  <- gsub('_.*','', r.stats.sel.one$operator)
# 3 done

stats.op <- subset(stats.rest, grepl('^(op:|TSDL)', operator))
o.stats.sel.op <- subset(o.f(stats.op), select=sel.colnames)
r.stats.sel.op <- subset(r.f(stats.op), select=sel.colnames)
stats.rest <- subset(stats.rest, !grepl('^(op:|TSDL)', operator))
colnames(o.stats.sel.op) <- new.colnames
colnames(r.stats.sel.op) <- new.colnames

#o.stats.sel.op$kind  <- ifelse(grepl('opsel:', o.stats.sel.op$operator), 'selection', 'operator')
#r.stats.sel.op$kind  <- ifelse(grepl('opsel:', o.stats.sel.op$operator), 'selection', 'operator')

o.stats.sel.op$operator  <- gsub('NVMC','NMC', gsub('_','',gsub('op.*:','', o.stats.sel.op$operator)))
r.stats.sel.op$operator  <- gsub('NVMC','NMC', gsub('_','',gsub('op.*:','', r.stats.sel.op$operator)))

stats.opsel <- subset(stats.rest, grepl('^opsel', operator))
o.stats.sel.opsel <- subset(o.f(stats.opsel), select=sel.colnames)
r.stats.sel.opsel <- subset(r.f(stats.opsel), select=sel.colnames)
stats.rest <- subset(stats.rest, !grepl('^opsel', operator))
colnames(o.stats.sel.opsel) <- new.colnames
colnames(r.stats.sel.opsel) <- new.colnames

#o.stats.sel.op$kind  <- ifelse(grepl('opsel:', o.stats.sel.op$operator), 'selection', 'operator')
#r.stats.sel.op$kind  <- ifelse(grepl('opsel:', o.stats.sel.op$operator), 'selection', 'operator')

o.stats.sel.opsel$operator  <- gsub('_','',gsub('op.*:','', o.stats.sel.opsel$operator))
r.stats.sel.opsel$operator  <- gsub('_','',gsub('op.*:','', r.stats.sel.opsel$operator))

# 4 done

@
% 10 pages for the main text + 1 for references.
<<introduction, child='introduction.Rnw'>>=
@
<<related, child='related.Rnw'>>=
@

<<methodology, child='methodology.Rnw'>>=
@

<<analysis, child='analysis.Rnw'>>=
@
<<results, child='results.Rnw'>>=
@
<<results, child='discussion.Rnw'>>=
@
<<threats, child='threats.Rnw'>>=
@
<<conclusion, child='conclusion.Rnw'>>=
@
\FloatBarrier
